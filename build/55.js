webpackJsonp([55],{1853:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonModWorkshopPhaseSelectorPageModule",function(){return h});var o=n(0),i=n(4),s=n(1),a=n(15),r=n(1979),c=n(391),l=this&&this.__decorate||function(e,t,n,o){var i,s=arguments.length,a=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(i=e[r])&&(a=(s<3?i(a):s>3?i(t,n,a):i(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a},h=function(){function e(){}return e=l([Object(o.I)({declarations:[r.a],imports:[a.a,c.a,i.l.forChild(r.a),s.b.forChild()]})],e)}()},1979:function(e,t,n){"use strict";n.d(t,"a",function(){return r});var o=n(0),i=n(4),s=this&&this.__decorate||function(e,t,n,o){var i,s=arguments.length,a=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(i=e[r])&&(a=(s<3?i(a):s>3?i(t,n,a):i(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e,t){this.viewCtrl=t,this.selected=e.get("selected"),this.original=this.selected,this.phases=e.get("phases"),this.workshopPhase=e.get("workshopPhase")}return e.prototype.closeModal=function(){this.viewCtrl.dismiss()},e.prototype.switchPhase=function(){this.original!=this.selected&&this.viewCtrl.dismiss(this.selected),this.original=null},e=s([Object(o.m)({selector:"page-addon-mod-workshop-phase-selector",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'addon.mod_workshop.selectphase\' | translate }}</ion-title>\n        <ion-buttons end>\n            <button ion-button icon-only (click)="closeModal()" [attr.aria-label]="\'core.close\' | translate">\n                <ion-icon name="close"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-list radio-group [(ngModel)]="selected" (ionChange)="switchPhase()">\n        <ng-container *ngFor="let phase of phases">\n            <ion-item *ngIf="workshopPhase >= phase.code || phase.tasks.length || phase.switchUrl">\n                <ion-label>{{ phase.title }}\n                    <p text-wrap *ngIf="workshopPhase == phase.code">{{ \'addon.mod_workshop.userplancurrentphase\' | translate }}</p>\n                </ion-label>\n                <ion-radio [value]="phase.code"></ion-radio>\n            </ion-item>\n            <ion-item *ngIf="!(workshopPhase >= phase.code || phase.tasks.length || phase.switchUrl)">\n                {{ phase.title }}\n            </ion-item>\n        </ng-container>\n    </ion-list>\n</ion-content>\n'}),a("design:paramtypes",[i.r,i.B])],e)}()}});