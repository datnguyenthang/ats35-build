webpackJsonp([115],{1789:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonCalendarSettingsPageModule",function(){return u});var o=n(0),i=n(4),r=n(1),a=n(1913),c=n(66),l=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(i=e[c])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a},u=function(){function e(){}return e=l([Object(o.I)({declarations:[a.a],imports:[c.a,i.l.forChild(a.a),r.b.forChild()]})],e)}()},1913:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var o=n(0),i=n(249),r=n(12),a=n(2),c=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(i=e[c])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a},l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=function(){function e(e,t,n){this.calendarProvider=e,this.eventsProvider=t,this.sitesProvider=n,this.defaultTime=0}return e.prototype.ionViewDidLoad=function(){var e=this;this.calendarProvider.getDefaultNotificationTime().then(function(t){e.defaultTime=t})},e.prototype.updateDefaultTime=function(e){this.calendarProvider.setDefaultNotificationTime(e),this.eventsProvider.trigger(i.a.DEFAULT_NOTIFICATION_TIME_CHANGED,{time:e},this.sitesProvider.getCurrentSiteId())},e=c([Object(o.m)({selector:"page-addon-calendar-settings",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'core.settings.settings\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-list>\n        <ion-item>\n            <ion-label>{{ \'addon.calendar.defaultnotificationtime\' | translate }}</ion-label>\n            <ion-select [(ngModel)]="defaultTime" (ionChange)="updateDefaultTime($event)" interface="popover">\n                <ion-option value="0">{{ \'core.settings.disabled\' | translate }}</ion-option>\n                <ion-option value="10">{{ 600 | coreDuration }}</ion-option>\n                <ion-option value="30">{{ 1800 | coreDuration }}</ion-option>\n                <ion-option value="60">{{ 3600 | coreDuration }}</ion-option>\n                <ion-option value="120">{{ 7200 | coreDuration }}</ion-option>\n                <ion-option value="360">{{ 21600 | coreDuration }}</ion-option>\n                <ion-option value="720">{{ 43200 | coreDuration }}</ion-option>\n                <ion-option value="1440">{{ 86400 | coreDuration }}</ion-option>\n            </ion-select>\n        </ion-item>\n    </ion-list>\n</ion-content>\n'}),l("design:paramtypes",[i.a,r.a,a.a])],e)}()}});