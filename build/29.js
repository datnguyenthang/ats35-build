webpackJsonp([29],{1883:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),i.d(t,"CoreLoginReconnectPageModule",function(){return d});var n=i(0),o=i(4),r=i(1),a=i(2011),s=i(16),l=i(15),c=this&&this.__decorate||function(e,t,i,n){var o,r=arguments.length,a=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,i,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(r<3?o(a):r>3?o(t,i,a):o(t,i))||a);return r>3&&a&&Object.defineProperty(t,i,a),a},d=function(){function e(){}return e=c([Object(n.I)({declarations:[a.a],imports:[s.a,l.a,o.l.forChild(a.a),r.b.forChild()]})],e)}()},2011:function(e,t,i){"use strict";i.d(t,"a",function(){return p});var n=i(0),o=i(4),r=i(9),a=i(2),s=i(8),l=i(71),c=i(20),d=this&&this.__decorate||function(e,t,i,n){var o,r=arguments.length,a=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,i,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(r<3?o(a):r>3?o(t,i,a):o(t,i))||a);return r>3&&a&&Object.defineProperty(t,i,a),a},g=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},p=function(){function e(e,t,i,n,o,r,a){this.navCtrl=e,this.appProvider=n,this.sitesProvider=o,this.loginHelper=r,this.domUtils=a;var s=this.sitesProvider.getCurrentSite();this.infoSiteUrl=t.get("infoSiteUrl"),this.pageName=t.get("pageName"),this.pageParams=t.get("pageParams"),this.siteConfig=t.get("siteConfig"),this.siteUrl=t.get("siteUrl"),this.siteId=t.get("siteId"),this.isLoggedOut=s&&s.isLoggedOut(),this.credForm=i.group({password:["",c.h.required]})}return e.prototype.ionViewDidLoad=function(){var e=this;this.siteConfig&&(this.identityProviders=this.loginHelper.getValidIdentityProviders(this.siteConfig)),this.sitesProvider.getSite(this.siteId).then(function(t){if(e.site={id:t.id,fullname:t.infos.fullname,avatar:t.infos.userpictureurl},e.username=t.infos.username,e.siteUrl=t.infos.siteurl,e.siteName=t.infos.sitename,e.site.avatar.startsWith(t.infos.siteurl+"/theme/image.php"))return e.site.avatar=!1,t.getPublicConfig().then(function(t){e.logoUrl=t.logourl||t.compactlogourl}).catch(function(){})}).catch(function(){e.cancel()})},e.prototype.cancel=function(){var e=this;this.sitesProvider.logout().finally(function(){e.navCtrl.setRoot("CoreLoginSitesPage")})},e.prototype.login=function(){var e=this;this.appProvider.closeKeyboard();var t=this.siteUrl,i=this.username,n=this.credForm.value.password;if(n)if(this.appProvider.isOnline()){var o=this.domUtils.showModalLoading();this.sitesProvider.getUserToken(t,i,n).then(function(t){return e.sitesProvider.updateSiteToken(e.infoSiteUrl,i,t.token,t.privateToken).then(function(){return e.sitesProvider.updateSiteInfoByUrl(e.infoSiteUrl,i).then(function(){return e.credForm.controls.password.reset(),e.pageName?e.navCtrl.setRoot(e.pageName,e.pageParams):e.loginHelper.goToSiteInitialPage()}).catch(function(t){e.domUtils.showErrorModalDefault(t,"core.login.errorupdatesite",!0),e.cancel()})})}).catch(function(i){e.loginHelper.treatUserTokenError(t,i)}).finally(function(){o.dismiss()})}else this.domUtils.showErrorModal("core.networkerrormsg",!0);else this.domUtils.showErrorModal("core.login.passwordrequired",!0)},e.prototype.oauthClicked=function(e){this.loginHelper.openBrowserForOAuthLogin(this.siteUrl,e,this.siteConfig.launchurl)||this.domUtils.showErrorModal("Invalid data.")},e=d([Object(n.m)({selector:"page-core-login-reconnect",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'core.login.reconnect\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content padding class="core-center-view">\n    <div class="box">\n        <div *ngIf="site" text-wrap text-center [ngClass]="{\'item-avatar-center\': site.avatar}">\n            <ion-avatar *ngIf="site.avatar">\n                \x3c!-- Show user avatar. --\x3e\n                <img [src]="site.avatar" class="avatar" core-external-content [siteId]="site.id" alt="{{ \'core.pictureof\' | translate:{$a: site.fullname} }}" role="presentation" onError="this.src=\'assets/img/user-avatar.png\'">\n            </ion-avatar>\n\n            \x3c!-- Show site logo or a default image. --\x3e\n            <img *ngIf="!site.avatar && logoUrl" [src]="logoUrl" core-external-content [siteId]="site.id" role="presentation">\n            <img *ngIf="!site.avatar && !logoUrl" src="assets/img/login_logo_ats.png" class="login-logo" role="presentation">\n\n            \x3c!-- If no sitename show big siteurl. --\x3e\n            <p *ngIf="!siteName" class="item-heading core-siteurl">{{siteUrl}}</p>\n            \x3c!-- If sitename, show big sitename and small siteurl. --\x3e\n            <p *ngIf="siteName" class="item-heading core-sitename"><core-format-text [text]="siteName"></core-format-text></p>\n            <p *ngIf="siteName" class="core-siteurl">{{siteUrl}}</p>\n\n            <p *ngIf="!isLoggedOut">\n                <ion-icon padding name="alert"></ion-icon> {{ \'core.login.reconnectdescription\' | translate }}\n            </p>\n        </div>\n        <ion-list>\n            <ion-item padding text-wrap class="core-username">\n                <p class="item-heading">{{ \'core.login.username\' | translate }}</p>\n                <p>{{username}}</p>\n            </ion-item>\n            <form [formGroup]="credForm" (ngSubmit)="login()">\n                <ion-item>\n                    <core-show-password item-content [name]="\'password\'">\n                        <ion-input class="core-ioninput-password" name="password" type="password" placeholder="{{ \'core.login.password\' | translate }}" formControlName="password"></ion-input>\n                    </core-show-password>\n                </ion-item>\n                <ion-grid>\n                    <ion-row>\n                        <ion-col>\n                            <a ion-button block color="light" (click)="cancel()">{{ \'core.login.cancel\' | translate }}</a>\n                        </ion-col>\n                        <ion-col>\n                            <button ion-button block [disabled]="!credForm.valid">{{ \'core.login.loginbutton\' | translate }}</button>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </form>\n        </ion-list>\n\n        \x3c!-- Identity providers. --\x3e\n        <ion-list *ngIf="identityProviders && identityProviders.length" padding-top>\n            <ion-list-header text-wrap>{{ \'core.login.potentialidps\' | translate }}</ion-list-header>\n            <button ion-item *ngFor="let provider of identityProviders" text-wrap class="core-oauth-icon" (click)="oauthClicked(provider)" title="{{provider.name}}">\n                <img [src]="provider.iconurl" alt="{{provider.name}}" item-start>\n                {{provider.name}}\n            </button>\n        </ion-list>\n    </div>\n</ion-content>\n'}),g("design:paramtypes",[o.q,o.r,c.a,r.a,a.a,l.a,s.a])],e)}()}});