webpackJsonp([59],{1850:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),i.d(t,"AddonModWikiIndexPageModule",function(){return u});var n=i(0),o=i(4),r=i(1),d=i(15),a=i(968),c=i(1976),s=this&&this.__decorate||function(e,t,i,n){var o,r=arguments.length,d=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,i,n);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(d=(r<3?o(d):r>3?o(t,i,d):o(t,i))||d);return r>3&&d&&Object.defineProperty(t,i,d),d},u=function(){function e(){}return e=s([Object(n.I)({declarations:[c.a],imports:[d.a,a.a,o.l.forChild(c.a),r.b.forChild()]})],e)}()},1976:function(e,t,i){"use strict";i.d(t,"a",function(){return c});var n=i(0),o=i(4),r=i(422),d=this&&this.__decorate||function(e,t,i,n){var o,r=arguments.length,d=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,i,n);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(d=(r<3?o(d):r>3?o(t,i,d):o(t,i))||d);return r>3&&d&&Object.defineProperty(t,i,d),d},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},c=function(){function e(e){this.module=e.get("module")||{},this.courseId=e.get("courseId"),this.action=e.get("action")||"page",this.pageId=e.get("pageId"),this.pageTitle=e.get("pageTitle"),this.wikiId=e.get("wikiId"),this.subwikiId=e.get("subwikiId"),this.userId=e.get("userId"),this.groupId=e.get("groupId"),this.title=this.pageTitle||this.module.name}return e.prototype.updateData=function(e){this.title="string"==typeof e?e:this.pageTitle||e.title||this.title},e.prototype.ionViewDidEnter=function(){this.wikiComponent.ionViewDidEnter()},e.prototype.ionViewDidLeave=function(){this.wikiComponent.ionViewDidLeave()},d([Object(n._9)(r.a),a("design:type",r.a)],e.prototype,"wikiComponent",void 0),e=d([Object(n.m)({selector:"page-addon-mod-wiki-index",template:'<ion-header>\n    <ion-navbar>\n        <ion-title><core-format-text [text]="title"></core-format-text></ion-title>\n\n        <ion-buttons end>\n            \x3c!-- The buttons defined by the component will be added in here. --\x3e\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="wikiComponent.loaded" (ionRefresh)="wikiComponent.doRefresh($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n\n    <addon-mod-wiki-index [module]="module" [courseId]="courseId" [action]="action" [pageId]="pageId" [pageTitle]="pageTitle" [wikiId]="wikiId" [subwikiId]="subwikiId" [userId]="userId" [groupId]="groupId" (dataRetrieved)="updateData($event)"></addon-mod-wiki-index>\n</ion-content>\n'}),a("design:paramtypes",[o.r])],e)}()}});