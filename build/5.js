webpackJsonp([5],{1841:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n.d(e,"AddonModQuizPlayerPageModule",function(){return d});var o=n(0),i=n(4),r=n(1),a=n(16),s=n(15),u=n(939),c=n(1965),l=this&&this.__decorate||function(t,e,n,o){var i,r=arguments.length,a=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(r<3?i(a):r>3?i(e,n,a):i(e,n))||a);return r>3&&a&&Object.defineProperty(e,n,a),a},d=function(){function t(){}return t=l([Object(o.I)({declarations:[c.a],imports:[a.a,s.a,u.a,i.l.forChild(c.a),r.b.forChild()]})],t)}()},1965:function(t,e,n){"use strict";n.d(e,"a",function(){return b});var o=n(0),i=n(4),r=n(1),a=n(12),s=n(7),u=n(2),c=n(45),l=n(8),d=n(22),m=n(73),h=n(92),p=n(164),f=n(251),g=n(1966),v=this&&this.__decorate||function(t,e,n,o){var i,r=arguments.length,a=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(r<3?i(a):r>3?i(e,n,a):i(e,n))||a);return r>3&&a&&Object.defineProperty(e,n,a),a},q=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},b=function(){function t(t,e,n,o,i,r,a,s,u,c,l,d,m,p,f,v){this.translate=n,this.eventsProvider=o,this.sitesProvider=i,this.syncProvider=r,this.domUtils=a,this.timeUtils=u,this.quizProvider=c,this.quizHelper=l,this.quizSync=d,this.questionHelper=m,this.cdr=p,this.navCtrl=v,this.component=h.a.COMPONENT,this.preflightData={},this.forceLeave=!1,this.quizId=t.get("quizId"),this.courseId=t.get("courseId"),this.moduleUrl=t.get("moduleUrl"),this.syncProvider.blockOperation(h.a.COMPONENT,this.quizId),this.autoSave=new g.a("addon-mod_quiz-player-form","#addon-mod_quiz-connection-error-button",e,s,m,c),this.navigationModal=f.create("AddonModQuizNavigationModalPage",{page:this})}return t.prototype.ngOnInit=function(){var t=this;this.start(),this.autoSaveErrorSubscription=this.autoSave.onError().subscribe(function(e){t.autoSaveError=e,t.cdr.detectChanges()})},t.prototype.ngOnDestroy=function(){this.autoSave.cancelAutoSave(),this.autoSave.stopCheckChangesProcess(),this.autoSaveErrorSubscription&&this.autoSaveErrorSubscription.unsubscribe(),this.syncProvider.unblockOperation(h.a.COMPONENT,this.quizId)},t.prototype.ionViewCanLeave=function(){var t=this;if(this.forceLeave)return!0;if(this.questions&&this.questions.length&&!this.showSummary){var e=this.domUtils.showModalLoading("core.sending",!0);return this.processAttempt(!1,!1).catch(function(){return e.dismiss(),t.domUtils.showConfirm(t.translate.instant("addon.mod_quiz.confirmleavequizonerror"))}).finally(function(){e.dismiss()})}return Promise.resolve()},t.prototype.abortQuiz=function(){this.quizAborted=!0},t.prototype.behaviourButtonClicked=function(t){var e=this;this.domUtils.showConfirm(this.translate.instant("core.areyousure")).then(function(){var n=e.domUtils.showModalLoading("core.sending",!0),o=e.getAnswers();return o[t.name]=t.value,e.quizProvider.processAttempt(e.quiz,e.attempt,o,e.preflightData).then(function(){var t=e.content.getScrollElement(),n=t.scrollTop||0,o=t.scrollLeft||0;return e.loaded=!1,e.content.scrollToTop(),e.loadPage(e.attempt.currentpage).finally(function(){e.loaded=!0,e.content.scrollTo(o,n)})}).finally(function(){n.dismiss()})}).catch(function(t){e.domUtils.showErrorModalDefault(t,"Error performing action.")})},t.prototype.changePage=function(t,e,n){var o=this;if(-1==t||this.attempt.state!=h.a.ATTEMPT_OVERDUE&&!this.attempt.finishedOffline)if(t!=this.attempt.currentpage||this.showSummary||void 0===n){if(!(t==this.attempt.currentpage&&!this.showSummary||e&&this.quiz.isSequential&&-1!=t||-1===t&&this.showSummary)){this.loaded=!1,this.content.scrollToTop();(this.showSummary?Promise.resolve():this.processAttempt(!1,!1)).then(function(){return o.autoSave.stopCheckChangesProcess(),(-1===t?o.loadSummary():o.loadPage(t)).catch(function(t){o.showSummary||o.autoSave.startCheckChangesProcess(o.quiz,o.attempt,o.preflightData,o.offline),o.domUtils.showErrorModalDefault(t,"addon.mod_quiz.errorgetquestions",!0)})},function(t){o.domUtils.showErrorModalDefault(t,"addon.mod_quiz.errorsaveattempt",!0)}).finally(function(){o.loaded=!0,void 0!==n&&setTimeout(function(){o.scrollToQuestion(n)},2e3)})}}else this.scrollToQuestion(n)},t.prototype.fetchData=function(){var t=this;return this.quizSync.waitForSync(this.quizId).then(function(){return t.quizProvider.getQuizById(t.courseId,t.quizId)}).then(function(e){return t.quiz=e,t.quiz.isSequential=t.quizProvider.isNavigationSequential(t.quiz),!!t.quizProvider.isQuizOffline(t.quiz)||t.quizProvider.isLastAttemptOfflineUnfinished(t.quiz)}).then(function(e){return t.offline=e,t.quiz.timelimit>0&&(t.quiz.readableTimeLimit=t.timeUtils.formatTime(t.quiz.timelimit)),t.quizProvider.getQuizAccessInformation(t.quiz.id,t.offline,!0)}).then(function(e){return t.quizAccessInfo=e,t.quizProvider.getUserAttempts(t.quiz.id,"all",!0,t.offline,!0)}).then(function(e){if(e.length){var n=[];return t.lastAttempt=e[e.length-1],t.newAttempt=t.quizProvider.isAttemptFinished(t.lastAttempt.state),n.push(t.quizSync.getSyncTime(t.quiz.id).then(function(e){t.quiz.syncTime=e,t.quiz.syncTimeReadable=t.quizSync.getReadableTimeFromTimestamp(e)})),n.push(t.quizProvider.loadFinishedOfflineData(e)),Promise.all(n)}t.newAttempt=!0}).catch(function(e){t.domUtils.showErrorModalDefault(e,"addon.mod_quiz.errorgetquiz",!0)})},t.prototype.finishAttempt=function(t,e){var n=this;return(e||this.attempt.state!=h.a.ATTEMPT_IN_PROGRESS?Promise.resolve():this.domUtils.showConfirm(this.translate.instant("addon.mod_quiz.confirmclose"))).then(function(){var o=n.domUtils.showModalLoading("core.sending",!0);return n.processAttempt(t,e).then(function(){n.eventsProvider.trigger(h.a.ATTEMPT_FINISHED_EVENT,{quizId:n.quizId,attemptId:n.attempt.id,synced:!n.offline},n.sitesProvider.getCurrentSiteId()),n.forceLeave=!0,n.navCtrl.pop()}).finally(function(){o.dismiss()})}).catch(function(t){n.domUtils.showErrorModalDefault(t,"addon.mod_quiz.errorsaveattempt",!0)})},t.prototype.getAnswers=function(){return this.questionHelper.getAnswersFromForm(document.forms["addon-mod_quiz-player-form"])},t.prototype.initTimer=function(){this.attemptAccessInfo.endtime>0&&(this.quizProvider.shouldShowTimeLeft(this.quizAccessInfo.activerulenames,this.attempt,this.attemptAccessInfo.endtime)?this.endTime=this.attemptAccessInfo.endtime:delete this.endTime)},t.prototype.loadPage=function(t){var e=this;return this.quizProvider.getAttemptData(this.attempt.id,t,this.preflightData,this.offline,!0).then(function(n){e.attempt=n.attempt,e.attempt.currentpage=t,e.questions=n.questions,e.nextPage=n.nextpage,e.previousPage=e.quiz.isSequential?-1:t-1,e.showSummary=!1,e.questions.forEach(function(t){t.readableMark=e.quizHelper.getQuestionMarkFromHtml(t.html),e.questionHelper.extractQuestionInfoBox(t,".info"),t.preferredBehaviour=e.quiz.preferredbehaviour,e.quizProvider.isQuestionBlocked(t)&&(t.type="description")}),e.quizProvider.logViewAttempt(e.attempt.id,t,e.preflightData,e.offline).catch(function(t){}),e.autoSave.startCheckChangesProcess(e.quiz,e.attempt,e.preflightData,e.offline)})},t.prototype.loadSummary=function(){var t=this;return this.summaryQuestions=[],this.quizProvider.getAttemptSummary(this.attempt.id,this.preflightData,this.offline,!0,!0).then(function(e){t.showSummary=!0,t.summaryQuestions=e,t.canReturn=t.attempt.state==h.a.ATTEMPT_IN_PROGRESS&&!t.attempt.finishedOffline,t.preventSubmitMessages=t.quizProvider.getPreventSubmitMessages(t.summaryQuestions),t.attempt.dueDateWarning=t.quizProvider.getAttemptDueDateWarning(t.quiz,t.attempt),t.quizProvider.logViewAttemptSummary(t.attempt.id,t.preflightData).catch(function(t){})})},t.prototype.loadNavigation=function(){var t=this;return this.quizProvider.getAttemptSummary(this.attempt.id,this.preflightData,this.offline).then(function(e){t.navigation=e})},t.prototype.prepareAnswers=function(){return this.questionHelper.prepareAnswers(this.questions,this.getAnswers(),this.offline)},t.prototype.processAttempt=function(t,e){var n=this;return this.prepareAnswers().then(function(o){return n.quizProvider.processAttempt(n.quiz,n.attempt,o,n.preflightData,t,e,n.offline)}).then(function(){n.autoSave.cancelAutoSave(),n.autoSave.hideAutoSaveError()})},t.prototype.scrollToQuestion=function(t){this.domUtils.scrollToElementBySelector(this.content,"#addon-mod_quiz-question-"+t)},t.prototype.showConnectionError=function(t){this.autoSave.showAutoSaveError(t)},t.prototype.start=function(){var t=this;this.loaded=!1,(this.quizDataLoaded?this.startOrContinueAttempt():this.fetchData().then(function(){return t.quizDataLoaded=!0,t.startOrContinueAttempt()})).finally(function(){t.loaded=!0})},t.prototype.startOrContinueAttempt=function(){var t=this;return this.quizHelper.getAndCheckPreflightData(this.quiz,this.quizAccessInfo,this.preflightData,this.newAttempt?void 0:this.lastAttempt,this.offline,!1,"addon.mod_quiz.startattempt").then(function(e){return t.quizProvider.getAttemptAccessInformation(t.quiz.id,e.id,t.offline,!0).then(function(n){return t.attemptAccessInfo=n,t.attempt=e,t.loadNavigation()}).then(function(){return t.attempt.state==h.a.ATTEMPT_OVERDUE||t.attempt.finishedOffline?t.loadSummary():t.loadPage(t.attempt.currentpage).then(function(){t.initTimer()})})}).catch(function(e){t.domUtils.showErrorModalDefault(e,"addon.mod_quiz.errorgetquestions",!0)})},t.prototype.timeUp=function(){this.timeUpCalled||(this.timeUpCalled=!0,this.finishAttempt(!1,!0))},v([Object(o._9)(i.f),q("design:type",i.f)],t.prototype,"content",void 0),t=v([Object(o.m)({selector:"page-addon-mod-quiz-player",template:'<ion-header>\n    <ion-navbar>\n        <ion-title><core-format-text *ngIf="quiz" [text]="quiz.name"></core-format-text></ion-title>\n\n        <ion-buttons end>\n            <button id="addon-mod_quiz-connection-error-button" ion-button icon-only [hidden]="!autoSaveError" (click)="showConnectionError($event)" [attr.aria-label]="\'core.error\' | translate">\n                <ion-icon name="alert"></ion-icon>\n            </button>\n            <button *ngIf="navigation && navigation.length" ion-button icon-only [attr.aria-label]="\'addon.mod_quiz.opentoc\' | translate" (click)="navigationModal.present()">\n                <ion-icon name="bookmark"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    \x3c!-- Navigation arrows and time left. --\x3e\n    <ion-toolbar *ngIf="loaded && endTime && questions && questions.length && !quizAborted && !showSummary" color="light" ion-fixed>\n        <ion-title>\n            <core-timer [endTime]="endTime" (finished)="timeUp()" [timerText]="\'addon.mod_quiz.timeleft\' | translate" align="center"></core-timer>\n        </ion-title>\n        <ion-buttons end>\n            <a ion-button icon-only *ngIf="previousPage >= 0" (click)="changePage(previousPage)" [title]="\'core.previous\' | translate">\n                <ion-icon name="arrow-back" md="ios-arrow-back"></ion-icon>\n            </a>\n            <a ion-button icon-only *ngIf="nextPage >= -1" (click)="changePage(nextPage)" [title]="\'core.next\' | translate">\n                <ion-icon name="arrow-forward" md="ios-arrow-forward"></ion-icon>\n            </a>\n        </ion-buttons>\n    </ion-toolbar>\n    <core-loading [hideUntil]="loaded" [class.core-has-fixed-timer]="endTime">\n        \x3c!-- Navigation arrows and time left. --\x3e\n        <ion-toolbar *ngIf="!endTime && questions && questions.length && !quizAborted && !showSummary" color="light">\n            <ion-buttons end>\n                <a ion-button icon-only *ngIf="previousPage >= 0" (click)="changePage(previousPage)" [title]="\'core.previous\' | translate">\n                    <ion-icon name="arrow-back" md="ios-arrow-back"></ion-icon>\n                </a>\n                <a ion-button icon-only *ngIf="nextPage >= -1" (click)="changePage(nextPage)" [title]="\'core.next\' | translate">\n                    <ion-icon name="arrow-forward" md="ios-arrow-forward"></ion-icon>\n                </a>\n            </ion-buttons>\n        </ion-toolbar>\n        \x3c!-- Button to start attempting. --\x3e\n        <div padding *ngIf="!attempt">\n            <button ion-button block (click)="start()">{{ \'addon.mod_quiz.startattempt\' | translate }}</button>\n        </div>\n\n        \x3c!-- Questions --\x3e\n        <form name="addon-mod_quiz-player-form" *ngIf="questions && questions.length && !quizAborted && !showSummary">\n            <div *ngFor="let question of questions">\n                <ion-card id="addon-mod_quiz-question-{{question.slot}}">\n                    \x3c!-- "Header" of the question. --\x3e\n                    <ion-item-divider color="light">\n                        <h2 *ngIf="question.number" class="inline">{{ \'core.question.questionno\' | translate:{$a: question.number} }}</h2>\n                        <h2 *ngIf="!question.number" class="inline">{{ \'core.question.information\' | translate }}</h2>\n                        <ion-note text-wrap item-end *ngIf="question.status || question.readableMark">\n                            <p *ngIf="question.status" class="block">{{question.status}}</p>\n                            <p *ngIf="question.readableMark"><core-format-text [text]="question.readableMark"></core-format-text></p>\n                        </ion-note>\n                    </ion-item-divider>\n                    \x3c!-- Body of the question. --\x3e\n                    <core-question text-wrap [question]="question" [component]="component" [componentId]="quiz.coursemodule" [attemptId]="attempt.id" [offlineEnabled]="offline" (onAbort)="abortQuiz()" (buttonClicked)="behaviourButtonClicked($event)"></core-question>\n                </ion-card>\n            </div>\n        </form>\n\n        \x3c!-- Go to next or previous page. --\x3e\n        <ion-grid text-wrap *ngIf="questions && questions.length && !quizAborted && !showSummary">\n            <ion-row>\n                <ion-col *ngIf="previousPage >= 0" >\n                    <button ion-button block icon-start (click)="changePage(previousPage)">\n                        <ion-icon name="arrow-back" md="ios-arrow-back"></ion-icon>\n                        {{ \'core.previous\' | translate }}\n                    </button>\n                </ion-col>\n                <ion-col *ngIf="nextPage >= -1">\n                    <button ion-button block icon-end (click)="changePage(nextPage)">\n                        {{ \'core.next\' | translate }}\n                        <ion-icon name="arrow-forward" md="ios-arrow-forward"></ion-icon>\n                    </button>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n        \x3c!-- Summary --\x3e\n        <ion-card *ngIf="!quizAborted && showSummary && summaryQuestions && summaryQuestions.length" class="addon-mod_quiz-table">\n            <ion-card-header text-wrap>\n                <h2>{{ \'addon.mod_quiz.summaryofattempt\' | translate }}</h2>\n            </ion-card-header>\n            \x3c!-- "Header" of the summary table. --\x3e\n            <ion-item text-wrap>\n                <ion-row align-items-center>\n                    <ion-col col-3 text-center><b>{{ \'addon.mod_quiz.question\' | translate }}</b></ion-col>\n                    <ion-col col-9 text-center><b>{{ \'addon.mod_quiz.status\' | translate }}</b></ion-col>\n                </ion-row>\n            </ion-item>\n            \x3c!-- Lift of questions of the summary table. --\x3e\n            <ng-container *ngFor="let question of summaryQuestions">\n                <a ion-item (click)="changePage(question.page, false, question.slot)" *ngIf="question.number" [attr.aria-label]="\'core.question.questionno\' | translate:{$a: question.number}" [attr.detail-push]="!quiz.isSequential && canReturn ? true : null">\n                    <ion-row align-items-center>\n                        <ion-col col-3 text-center>{{ question.number }}</ion-col>\n                        <ion-col col-9 text-center>{{ question.status }}</ion-col>\n                    </ion-row>\n                </a>\n            </ng-container>\n            \x3c!-- Button to return to last page seen. --\x3e\n            <ion-item *ngIf="canReturn">\n                <a ion-button block (click)="changePage(attempt.currentpage)">{{ \'addon.mod_quiz.returnattempt\' | translate }}</a>\n            </ion-item>\n            \x3c!-- Due date warning. --\x3e\n            <ion-item text-wrap *ngIf="attempt.dueDateWarning">\n                {{ attempt.dueDateWarning }}\n            </ion-item>\n            \x3c!-- Time left (if quiz is timed). --\x3e\n            <core-timer *ngIf="endTime" [endTime]="endTime" (finished)="timeUp()" [timerText]="\'addon.mod_quiz.timeleft\' | translate"></core-timer>\n            \x3c!-- List of messages explaining why the quiz cannot be submitted. --\x3e\n            <ion-item text-wrap *ngIf="preventSubmitMessages.length">\n                <p class="item-heading">{{ \'addon.mod_quiz.cannotsubmitquizdueto\' | translate }}</p>\n                <p *ngFor="let message of preventSubmitMessages">{{message}}</p>\n                <a ion-button block icon-end [href]="moduleUrl" core-link>\n                    <ion-icon name="open"></ion-icon>\n                    {{ \'core.openinbrowser\' | translate }}\n                </a>\n            </ion-item>\n            \x3c!-- Button to submit the quiz. --\x3e\n            <ion-item *ngIf="!attempt.finishedOffline && !preventSubmitMessages.length">\n                <a ion-button block (click)="finishAttempt(true)">{{ \'addon.mod_quiz.submitallandfinish\' | translate }}</a>\n            </ion-item>\n        </ion-card>\n\n        \x3c!-- Quiz aborted --\x3e\n        <ion-card *ngIf="attempt && (((!questions || !questions.length) && !showSummary) || quizAborted)">\n            <ion-item text-wrap>\n                <p>{{ \'addon.mod_quiz.errorparsequestions\' | translate }}</p>\n            </ion-item>\n            <ion-item>\n                <a ion-button block icon-end [href]="moduleUrl" core-link>\n                    <ion-icon name="open"></ion-icon>\n                    {{ \'core.openinbrowser\' | translate }}\n                </a>\n            </ion-item>\n        </ion-card>\n    </core-loading>\n</ion-content>\n'}),q("design:paramtypes",[i.r,s.a,r.c,a.a,u.a,c.a,l.a,i.t,d.a,h.a,f.a,p.a,m.a,o.j,i.o,i.q])],t)}()},1966:function(t,e,n){"use strict";n.d(e,"a",function(){return r});var o=n(962),i=n(96),r=(n.n(i),function(){function t(t,e,n,r,a,s){var u=this;this.formName=t,this.buttonSelector=e,this.popoverCtrl=r,this.questionHelper=a,this.quizProvider=s,this.CHECK_CHANGES_INTERVAL=5e3,this.popoverShown=!1,this.logger=n.getInstance("AddonModQuizAutoSave"),this.popover=this.popoverCtrl.create(o.a),this.popover.onDidDismiss(function(){u.popoverShown=!1}),this.errorObservable=new i.BehaviorSubject(!1)}return t.prototype.cancelAutoSave=function(){clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=void 0},t.prototype.checkChanges=function(t,e,n,o){if(!this.autoSaveTimeout){var i=this.getAnswers();if(this.previousAnswers){var r=!0;for(var a in i)if(this.previousAnswers[a]!=i[a]){r=!1;break}r||this.setAutoSaveTimer(t,e,n,o),this.previousAnswers=i}else this.previousAnswers=i}},t.prototype.getAnswers=function(){return this.questionHelper.getAnswersFromForm(document.forms[this.formName])},t.prototype.hideAutoSaveError=function(){this.errorObservable.next(!1),this.popover.dismiss()},t.prototype.onError=function(){return this.errorObservable},t.prototype.setAutoSaveTimer=function(t,e,n,o){var i=this;!t.autosaveperiod||this.autoSaveTimeout||this.quizProvider.isAttemptTimeNearlyOver(t,e)||(this.autoSaveTimeout=setTimeout(function(){var r=i.getAnswers();i.cancelAutoSave(),i.previousAnswers=r,i.quizProvider.saveAttempt(t,e,r,n,o).then(function(){i.hideAutoSaveError()}).catch(function(r){i.logger.warn("Error auto-saving data.",r),i.errorObservable.getValue()||(i.errorObservable.next(!0),i.showAutoSaveError()),i.setAutoSaveTimer(t,e,n,o)})},1e3*t.autosaveperiod))},t.prototype.showAutoSaveError=function(t){this.popoverShown||(this.popoverShown=!0,this.popover.present({ev:t||{target:document.querySelector(this.buttonSelector)}}))},t.prototype.startCheckChangesProcess=function(t,e,n,o){var i=this;!this.checkChangesInterval&&t.autosaveperiod&&(this.previousAnswers=void 0,this.loadPreviousAnswersTimeout=setTimeout(function(){i.checkChanges(t,e,n,o)},2500),this.checkChangesInterval=setInterval(function(){i.checkChanges(t,e,n,o)},this.CHECK_CHANGES_INTERVAL))},t.prototype.stopCheckChangesProcess=function(){clearTimeout(this.loadPreviousAnswersTimeout),clearInterval(this.checkChangesInterval),this.loadPreviousAnswersTimeout=void 0,this.checkChangesInterval=void 0},t}())}});