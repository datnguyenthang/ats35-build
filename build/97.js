webpackJsonp([97],{1810:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonModChatChatPageModule",function(){return h});var o=n(0),s=n(4),i=n(1),a=n(16),r=n(15),l=n(66),c=n(1934),d=this&&this.__decorate||function(e,t,n,o){var s,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(a=(i<3?s(a):i>3?s(t,n,a):s(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},h=function(){function e(){}return e=d([Object(o.I)({declarations:[c.a],imports:[a.a,r.a,l.a,s.l.forChild(c.a),i.b.forChild()]})],e)}()},1934:function(e,t,n){"use strict";n.d(t,"a",function(){return p});var o=n(0),s=n(4),i=n(9),a=n(12),r=n(7),l=n(2),c=n(8),d=n(11),h=n(395),g=n(134),m=n(5),f=(n.n(m),this&&this.__decorate||function(e,t,n,o){var s,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(a=(i<3?s(a):i>3?s(t,n,a):s(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a}),u=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},p=function(){function e(e,t,n,o,s,i,a,r,l,c,d,h){var g=this;this.navCtrl=s,this.chatProvider=i,this.appProvider=a,this.modalCtrl=l,this.domUtils=c,this.textUtils=d,this.eventsProvider=h,this.loaded=!1,this.messages=[],this.lastTime=0,this.oldContentHeight=0,this.viewDestroyed=!1,this.pollingRunning=!1,this.chatId=e.get("chatId"),this.courseId=e.get("courseId"),this.title=e.get("title"),this.logger=t.getInstance("AddonModChoiceChoicePage"),this.currentUserBeep="beep "+r.getCurrentSiteUserId(),this.isOnline=this.appProvider.isOnline(),this.onlineObserver=n.onchange().subscribe(function(e){o.run(function(){g.isOnline=g.appProvider.isOnline()})})}return e.prototype.ionViewDidLoad=function(){var e=this;this.loginUser().then(function(){return e.fetchMessages().then(function(){e.startPolling()}).catch(function(t){e.domUtils.showErrorModalDefault(t,"addon.mod_chat.errorwhileretrievingmessages",!0),e.navCtrl.pop()})}).catch(function(t){e.domUtils.showErrorModalDefault(t,"addon.mod_chat.errorwhileconnecting",!0),e.navCtrl.pop()}).finally(function(){e.loaded=!0}),this.keyboardObserver=this.eventsProvider.on(a.a.KEYBOARD_CHANGE,function(t){e.content.resize()})},e.prototype.ionViewDidEnter=function(){this.startPolling()},e.prototype.ionViewWillLeave=function(){this.stopPolling()},e.prototype.showChatUsers=function(){var e=this,t=this.modalCtrl.create("AddonModChatUsersPage",{sessionId:this.sessionId});t.onDidDismiss(function(t){t&&t.talkTo&&(e.newMessage="To "+t.talkTo+": "),t&&t.beepTo&&e.sendMessage("",t.beepTo)}),t.present()},e.prototype.loginUser=function(){var e=this;return this.chatProvider.loginUser(this.chatId).then(function(t){e.sessionId=t})},e.prototype.fetchMessages=function(){var e=this;return this.chatProvider.getLatestMessages(this.sessionId,this.lastTime).then(function(t){return e.lastTime=t.chatnewlasttime||0,e.chatProvider.getMessagesUserData(t.messages,e.courseId).then(function(t){e.messages=e.messages.concat(t),t.length&&setTimeout(function(){return e.scrollToBottom()})})})},e.prototype.startPolling=function(){var e=this;this.polling||(this.polling=setInterval(function(){e.fetchMessagesInterval().catch(function(){})},h.a.POLL_INTERVAL))},e.prototype.stopPolling=function(){this.polling&&(this.logger.debug("Cancelling polling for messages"),clearInterval(this.polling))},e.prototype.fetchMessagesInterval=function(){var e=this;return this.logger.debug("Polling for messages"),!this.isOnline||this.pollingRunning?Promise.reject(null):(this.pollingRunning=!0,this.fetchMessages().catch(function(){return e.loginUser().then(function(){return e.fetchMessages()}).catch(function(t){return e.polling&&(clearInterval(e.polling),e.polling=void 0),e.domUtils.showErrorModalDefault(t,"addon.mod_chat.errorwhileretrievingmessages",!0),Promise.reject(null)})}).finally(function(){e.pollingRunning=!1}))},e.prototype.showDate=function(e,t){return!t||!m(1e3*e.timestamp).isSame(1e3*t.timestamp,"day")},e.prototype.sendMessage=function(e,t){var n=this;if(void 0===t&&(t=0),this.isOnline&&(0!==t||e.trim())){e=this.textUtils.replaceNewLines(e,"<br>");var o=this.domUtils.showModalLoading("core.sending",!0);this.chatProvider.sendMessage(this.sessionId,e,t).then(function(){n.fetchMessagesInterval().catch(function(){})}).catch(function(e){n.appProvider.closeKeyboard(),n.domUtils.showErrorModalDefault(e,"addon.mod_chat.errorwhilesendingmessage",!0)}).finally(function(){o.dismiss()})}},e.prototype.reconnect=function(){var e=this,t=this.domUtils.showModalLoading();return this.fetchMessagesInterval().then(function(){e.startPolling()}).catch(function(){}).finally(function(){t.dismiss()})},e.prototype.scrollToBottom=function(){var e=this;setTimeout(function(){e.viewDestroyed||e.content.scrollToBottom(0)})},e.prototype.resizeContent=function(){var e=this,t=this.content.getContentDimensions().scrollTop;this.content.resize(),setTimeout(function(){!e.viewDestroyed&&e.content&&e.content.contentHeight!=e.oldContentHeight&&(t||(t=e.content.getContentDimensions().scrollTop),t+=e.oldContentHeight-e.content.contentHeight,e.oldContentHeight=e.content.contentHeight,e.content.scrollTo(0,t,0))})},e.prototype.ngOnDestroy=function(){this.onlineObserver&&this.onlineObserver.unsubscribe(),this.keyboardObserver&&this.keyboardObserver.off(),this.stopPolling(),this.viewDestroyed=!0},f([Object(o._9)(s.f),u("design:type",s.f)],e.prototype,"content",void 0),e=f([Object(o.m)({selector:"page-addon-mod-chat-chat",template:'<ion-header>\n    <ion-navbar>\n        <ion-title><core-format-text [text]="title"></core-format-text></ion-title>\n        <ion-buttons end>\n            <button *ngIf="loaded" ion-button icon-only (click)="showChatUsers()">\n                <ion-icon name="people"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]="loaded">\n        <div aria-live="polite">\n            <div *ngFor="let message of messages; index as index; last as last">\n\n                <div text-center *ngIf="showDate(messages[index], messages[index - 1])" class="addon-mod-chat-notice">\n                    <ion-badge text-wrap color="light">\n                        <span>{{ message.timestamp * 1000 | coreFormatDate:"dfdayweekmonth" }}</span>\n                    </ion-badge>\n                </div>\n\n                <div text-center *ngIf="message.system && message.message == \'enter\'" class="addon-mod-chat-notice">\n                    <ion-badge text-wrap color="light">\n                        <span>{{ message.timestamp * 1000 | coreFormatDate:"dftimedate" }} {{ \'addon.mod_chat.messageenter\' | translate:{$a: message.userfullname} }}</span>\n                    </ion-badge>\n                </div>\n\n                <div text-center *ngIf="message.system && message.message == \'exit\'" class="addon-mod-chat-notice">\n                    <ion-badge text-wrap color="light">\n                        <span>{{ message.timestamp * 1000 | coreFormatDate:"dftimedate" }} {{ \'addon.mod_chat.messageexit\' | translate:{$a: message.userfullname} }}</span>\n                    </ion-badge>\n                </div>\n\n                <div text-center *ngIf="message.message == currentUserBeep" class="addon-mod-chat-notice">\n                    <ion-badge text-wrap color="light">\n                        <span>{{ \'addon.mod_chat.messagebeepsyou\' | translate:{$a: message.userfullname} }}</span>\n                    </ion-badge>\n                </div>\n\n                <ion-item text-wrap *ngIf="!message.system && message.message.substr(0, 4) != \'beep\'" class="addon-mod-chat-message">\n                    <ion-avatar item-start>\n                        <img [src]="message.userprofileimageurl" onError="this.src=\'assets/img/user-avatar.png\'" core-external-content [alt]="\'core.pictureof\' | translate:{$a: message.userfullname}" role="presentation">\n                    </ion-avatar>\n                    <h2>\n                        <p float-right>{{ message.timestamp * 1000 | coreFormatDate:"dftimedate" }}</p>\n                        <core-format-text [text]="message.userfullname"></core-format-text>\n                    </h2>\n                    <core-format-text [text]="message.message" (afterRender)="last && scrollToBottom()"></core-format-text>\n                </ion-item>\n            </div>\n\n            <div text-center margin *ngIf="!messages || messages.length <= 0">\n                <p>{{ \'addon.mod_chat.nomessages\' | translate}}</p>\n            </div>\n        </div>\n    </core-loading>\n</ion-content>\n<ion-footer color="light" class="footer-adjustable">\n    <ion-toolbar color="light" position="bottom">\n        <p text-center *ngIf="!isOnline">{{ \'addon.mod_chat.mustbeonlinetosendmessages\' | translate }}</p>\n        <core-send-message-form *ngIf="isOnline && polling && loaded" [message]="newMessage" (onSubmit)="sendMessage($event)" [showKeyboard]="showKeyboard" [placeholder]="\'addon.messages.newmessage\' | translate" (onResize)="resizeContent()"></core-send-message-form>\n        <button *ngIf="isOnline && !polling && loaded" (click)="reconnect()" ion-button block color="light">{{ \'core.login.reconnect\' | translate }}</button>\n    </ion-toolbar>\n</ion-footer>\n'}),u("design:paramtypes",[s.r,r.a,g.a,o.M,s.q,h.a,i.a,l.a,s.o,c.a,d.a,a.a])],e)}()}});