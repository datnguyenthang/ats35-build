webpackJsonp([37],{1875:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r.d(t,"CoreGradesCoursesPageModule",function(){return l});var o=r(0),n=r(4),a=r(1),s=r(2003),i=r(16),d=r(15),c=this&&this.__decorate||function(e,t,r,o){var n,a=arguments.length,s=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(s=(a<3?n(s):a>3?n(t,r,s):n(t,r))||s);return a>3&&s&&Object.defineProperty(t,r,s),s},l=function(){function e(){}return e=c([Object(o.I)({declarations:[s.a],imports:[i.a,d.a,n.l.forChild(s.a),a.b.forChild()]})],e)}()},2003:function(e,t,r){"use strict";r.d(t,"a",function(){return u});var o=r(0),n=r(4),a=r(94),s=r(8),i=r(133),d=r(115),c=this&&this.__decorate||function(e,t,r,o){var n,a=arguments.length,s=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(s=(a<3?n(s):a>3?n(t,r,s):n(t,r))||s);return a>3&&s&&Object.defineProperty(t,r,s),s},l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=function(){function e(e,t,r){this.gradesProvider=e,this.domUtils=t,this.gradesHelper=r,this.grades=[],this.gradesLoaded=!1}return e.prototype.ionViewDidLoad=function(){var e=this;this.courseId&&this.gotoCourseGrades(this.courseId),this.fetchData().then(function(){return!e.courseId&&e.splitviewCtrl.isOn()&&e.grades.length>0&&e.gotoCourseGrades(e.grades[0].courseid),e.gradesProvider.logCoursesGradesView()}).finally(function(){e.gradesLoaded=!0})},e.prototype.fetchData=function(){var e=this;return this.gradesProvider.getCoursesGrades().then(function(t){return e.gradesHelper.getGradesCourseData(t).then(function(t){e.grades=t})}).catch(function(t){e.domUtils.showErrorModalDefault(t,"Error loading grades")})},e.prototype.refreshGrades=function(e){var t=this;this.gradesProvider.invalidateCoursesGradesData().finally(function(){t.fetchData().finally(function(){e.complete()})})},e.prototype.gotoCourseGrades=function(e){this.courseId=e,this.splitviewCtrl.push("CoreGradesCoursePage",{courseId:e,userId:this.userId})},c([Object(o._9)(n.f),l("design:type",n.f)],e.prototype,"content",void 0),c([Object(o._9)(i.a),l("design:type",i.a)],e.prototype,"splitviewCtrl",void 0),e=c([Object(o.m)({selector:"page-core-grades-courses",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'core.grades.grades\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<core-split-view>\n    <ion-content>\n        <ion-refresher [enabled]="gradesLoaded" (ionRefresh)="refreshGrades($event)">\n            <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n        </ion-refresher>\n        <core-loading [hideUntil]="gradesLoaded">\n            <core-empty-box *ngIf="grades && grades.length == 0" icon="stats" [message]="\'core.grades.nogradesreturned\' | translate">\n            </core-empty-box>\n\n            <ion-list *ngIf="grades && grades.length > 0">\n                <a ion-item text-wrap *ngFor="let grade of grades" [title]="grade.courseFullName" (click)="gotoCourseGrades(grade.courseid)" [class.core-split-item-selected]="grade.courseid == courseId">\n                    <h2><core-format-text [text]="grade.courseFullName"></core-format-text></h2>\n                    <ion-badge item-end color="light">{{grade.grade}}</ion-badge>\n                </a>\n            </ion-list>\n        </core-loading>\n    </ion-content>\n</core-split-view>'}),l("design:paramtypes",[a.a,s.a,d.a])],e)}()}});