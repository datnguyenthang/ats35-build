webpackJsonp([79],{1828:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonModForumDiscussionPageModule",function(){return d});var o=n(0),r=n(4),i=n(1),a=n(16),c=n(15),s=n(66),f=n(1952),l=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},d=function(){function e(){}return e=l([Object(o.I)({declarations:[f.a],imports:[a.a,c.a,s.a,r.l.forChild(f.a),i.b.forChild()]})],e)}()},1952:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var o=n(0),r=n(4),i=n(8),a=n(137),c=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(e,t,n){this.domUtils=t,this.glossaryProvider=n,this.component=a.a.COMPONENT,this.loaded=!1,this.showAuthor=!1,this.showDate=!1,this.courseId=e.get("courseId"),this.entryId=e.get("entryId")}return e.prototype.ionViewDidLoad=function(){var e=this;this.fetchEntry().then(function(){e.glossaryProvider.logEntryView(e.entry.id)}).finally(function(){e.loaded=!0})},e.prototype.doRefresh=function(e){var t=this;return this.glossaryProvider.invalidateEntry(this.entry.id).catch(function(){}).then(function(){return t.fetchEntry(!0)}).finally(function(){e&&e.complete()})},e.prototype.fetchEntry=function(e){var t=this;return this.glossaryProvider.getEntry(this.entryId).then(function(n){if(t.entry=n,!e)return t.glossaryProvider.getGlossaryById(t.courseId,t.entry.glossaryid).then(function(e){switch(t.componentId=e.coursemodule,e.displayformat){case"fullwithauthor":case"encyclopedia":t.showAuthor=!0,t.showDate=!0;break;case"fullwithoutauthor":t.showAuthor=!1,t.showDate=!0;break;default:t.showAuthor=!1,t.showDate=!1}})}).catch(function(e){return t.domUtils.showErrorModalDefault(e,"addon.mod_glossary.errorloadingentry",!0),Promise.reject(null)})},e=c([Object(o.m)({selector:"page-addon-mod-glossary-entry",template:'<ion-header>\n    <ion-navbar>\n        <ion-title *ngIf="entry"><core-format-text [text]="entry.concept"></core-format-text></ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="loaded" (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n\n    <core-loading [hideUntil]="loaded">\n        <ng-container *ngIf="entry">\n            <ion-item text-wrap *ngIf="showAuthor">\n                <ion-avatar item-start (click)="openUserProfile(post.userid)">\n                    <img [src]="entry.userpictureurl" onError="this.src=\'assets/img/user-avatar.png\'" core-external-content [alt]="\'core.pictureof\' | translate:{$a: entry.userfullname}" role="presentation">\n                </ion-avatar>\n                <h2><core-format-text [text]="entry.concept"></core-format-text></h2>\n                <ion-note item-end *ngIf="showDate">{{ entry.timemodified | coreDateDayOrTime }}</ion-note>\n                <p><core-format-text [text]="entry.userfullname"></core-format-text></p>\n            </ion-item>\n            <ion-item text-wrap *ngIf="!showAuthor">\n                <h2><core-format-text [text]="entry.concept"></core-format-text></h2>\n                <ion-note item-end *ngIf="showDate">{{ entry.timemodified | coreDateDayOrTime }}</ion-note>\n            </ion-item>\n            <ion-item text-wrap>\n                <core-format-text [component]="component" [componentId]="componentId" [text]="entry.definition"></core-format-text>\n            </ion-item>\n            <ng-container *ngIf="entry.attachment">\n                <core-file *ngFor="let file of entry.attachments" [file]="file" [component]="component" [componentId]="componentId"></core-file>\n            </ng-container>\n            <ion-item text-wrap *ngIf="entry.approved != 1">\n                <p><em>{{ \'addon.mod_glossary.entrypendingapproval\' | translate }}</em></p>\n            </ion-item>\n        </ng-container>\n\n        <ion-card *ngIf="!entry">\n            <ion-item class="core-error-card">\n                {{ \'addon.mod_glossary.errorloadingentry\' | translate }}\n            </ion-item>\n        </ion-card>\n    </core-loading>\n</ion-content>\n'}),s("design:paramtypes",[r.r,i.a,a.a])],e)}()}});