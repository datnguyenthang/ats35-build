webpackJsonp([2],{1857:function(t,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),i.d(n,"AddonNotificationsListPageModule",function(){return u});var e=i(0),o=i(4),r=i(1),a=i(16),c=i(15),s=i(66),f=i(1984),l=i(1986),d=this&&this.__decorate||function(t,n,i,e){var o,r=arguments.length,a=r<3?n:null===e?e=Object.getOwnPropertyDescriptor(n,i):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,i,e);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(r<3?o(a):r>3?o(n,i,a):o(n,i))||a);return r>3&&a&&Object.defineProperty(n,i,a),a},u=function(){function t(){}return t=d([Object(e.I)({declarations:[l.a],imports:[a.a,c.a,s.a,o.l.forChild(l.a),r.b.forChild(),f.a]})],t)}()},1984:function(t,n,i){"use strict";i.d(n,"a",function(){return f});var e=i(0),o=i(17),r=i(4),a=i(1),c=i(1985),s=this&&this.__decorate||function(t,n,i,e){var o,r=arguments.length,a=r<3?n:null===e?e=Object.getOwnPropertyDescriptor(n,i):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,i,e);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(r<3?o(a):r>3?o(n,i,a):o(n,i))||a);return r>3&&a&&Object.defineProperty(n,i,a),a},f=function(){function t(){}return t=s([Object(e.I)({declarations:[c.a],imports:[o.b,r.k,a.b.forChild()],providers:[],exports:[c.a]})],t)}()},1985:function(t,n,i){"use strict";i.d(n,"a",function(){return c});var e=i(0),o=i(33),r=this&&this.__decorate||function(t,n,i,e){var o,r=arguments.length,a=r<3?n:null===e?e=Object.getOwnPropertyDescriptor(n,i):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,i,e);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(r<3?o(a):r>3?o(n,i,a):o(n,i))||a);return r>3&&a&&Object.defineProperty(n,i,a),a},a=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},c=function(){function t(t){this.contentLinksDelegate=t,this.actions=[]}return t.prototype.ngOnInit=function(){var t=this;this.contentLinksDelegate.getActionsFor(this.contextUrl,this.courseId).then(function(n){t.actions=n})},r([Object(e.D)(),a("design:type",String)],t.prototype,"contextUrl",void 0),r([Object(e.D)(),a("design:type",Number)],t.prototype,"courseId",void 0),t=r([Object(e.m)({selector:"addon-notifications-actions",template:'<ion-row *ngIf="actions && actions.length > 0">\n    <ion-col *ngFor="let action of actions">\n        <button ion-button icon-left clear small (click)="action.action()">\n            <ion-icon name="{{action.icon}}"></ion-icon>\n            {{ action.message | translate }}\n        </button>\n    </ion-col>\n</ion-row>\n'}),a("design:paramtypes",[o.a])],t)}()},1986:function(t,n,i){"use strict";i.d(n,"a",function(){return p});var e=i(0),o=i(4),r=i(8),a=i(11),c=i(12),s=i(2),f=i(6),l=i(197),d=i(148),u=this&&this.__decorate||function(t,n,i,e){var o,r=arguments.length,a=r<3?n:null===e?e=Object.getOwnPropertyDescriptor(n,i):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,i,e);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(r<3?o(a):r>3?o(n,i,a):o(n,i))||a);return r>3&&a&&Object.defineProperty(n,i,a),a},h=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},p=function(){function t(t,n,i,e,o,r,a,c){this.domUtils=n,this.eventsProvider=i,this.sitesProvider=e,this.textUtils=o,this.utils=r,this.notificationsProvider=a,this.pushNotificationsDelegate=c,this.notifications=[],this.notificationsLoaded=!1,this.canLoadMore=!1,this.readCount=0,this.unreadCount=0}return t.prototype.ionViewDidLoad=function(){var t=this;this.fetchNotifications().finally(function(){t.notificationsLoaded=!0}),this.cronObserver=this.eventsProvider.on(l.a.READ_CRON_EVENT,function(){return t.refreshNotifications()},this.sitesProvider.getCurrentSiteId()),this.pushObserver=this.pushNotificationsDelegate.on("receive").subscribe(function(n){t.utils.isTrueOrOne(n.notif)&&t.sitesProvider.isCurrentSite(n.site)&&t.refreshNotifications()})},t.prototype.fetchNotifications=function(t){var n=this;t&&(this.readCount=0,this.unreadCount=0);var i=l.a.LIST_LIMIT;return this.notificationsProvider.getUnreadNotifications(this.unreadCount,i).then(function(e){var o;if(e.forEach(n.formatText.bind(n)),n.unreadCount+=e.length,e.length<i){var r=i-e.length;o=n.notificationsProvider.getReadNotifications(n.readCount,r).then(function(i){i.forEach(n.formatText.bind(n)),n.readCount+=i.length,n.notifications=t?e.concat(i):n.notifications.concat(e,i),n.canLoadMore=i.length>=r}).catch(function(t){0==e.length&&(n.domUtils.showErrorModalDefault(t,"addon.notifications.errorgetnotifications",!0),n.canLoadMore=!1)})}else o=Promise.resolve(),n.notifications=t?e:n.notifications.concat(e),n.canLoadMore=!0;return o.then(function(){n.markNotificationsAsRead(e)})}).catch(function(t){n.domUtils.showErrorModalDefault(t,"addon.notifications.errorgetnotifications",!0),n.canLoadMore=!1})},t.prototype.markNotificationsAsRead=function(t){var n=this;if(t.length>0){var i=t.map(function(t){return n.notificationsProvider.markNotificationRead(t.id)});Promise.all(i).finally(function(){n.notificationsProvider.invalidateNotificationsList().finally(function(){var t=n.sitesProvider.getCurrentSiteId();n.eventsProvider.trigger(l.a.READ_CHANGED_EVENT,null,t)})})}},t.prototype.refreshNotifications=function(t){var n=this;this.notificationsProvider.invalidateNotificationsList().finally(function(){return n.fetchNotifications(!0).finally(function(){t&&t.complete()})})},t.prototype.loadMoreNotifications=function(t){this.fetchNotifications().finally(function(){t.complete()})},t.prototype.formatText=function(t){var n=t.mobiletext.replace(/-{4,}/gi,"");t.mobiletext=this.textUtils.replaceNewLines(n,"<br>")},t.prototype.ngOnDestroy=function(){this.cronObserver&&this.cronObserver.off(),this.pushObserver&&this.pushObserver.unsubscribe()},t=u([Object(e.m)({selector:"page-addon-notifications-list",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'addon.notifications.notifications\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="notificationsLoaded" (ionRefresh)="refreshNotifications($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n    <core-loading [hideUntil]="notificationsLoaded">\n        <ion-card *ngFor="let notification of notifications">\n            <ion-item>\n                <ion-avatar item-start core-user-link [userId]="notification.useridfrom" [courseId]="notification.courseid">\n                    <img [src]="notification.profileimageurlfrom || \'assets/img/user-avatar.png\'" core-external-content [alt]="\'core.pictureof\' | translate:{$a: notification.userfromfullname}" role="presentation">\n                </ion-avatar>\n                <h2>{{notification.userfromfullname}}</h2>\n                <div item-end *ngIf="!notification.timeread"><ion-icon name="record" color="primary"></ion-icon></div>\n                <p>{{notification.timecreated | coreDateDayOrTime}}</p>\n            </ion-item>\n            <ion-item text-wrap>\n                <p><core-format-text [text]="notification.mobiletext | coreCreateLinks"></core-format-text></p>\n            </ion-item>\n            <addon-notifications-actions [contextUrl]="notification.contexturl" [courseId]="notification.courseid"></addon-notifications-actions>\n        </ion-card>\n        <core-empty-box *ngIf="!notifications || notifications.length <= 0" icon="notifications" [message]="\'addon.notifications.therearentnotificationsyet\' | translate"></core-empty-box>\n        <ion-infinite-scroll [enabled]="canLoadMore" (ionInfinite)="loadMoreNotifications($event)">\n            <ion-infinite-scroll-content></ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n    </core-loading>\n</ion-content>\n'}),h("design:paramtypes",[o.r,r.a,c.a,s.a,a.a,f.a,l.a,d.a])],t)}()}});