webpackJsonp([95],{1812:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonModChatUsersPageModule",function(){return d});var o=n(0),i=n(4),r=n(1),s=n(16),a=n(15),c=n(66),l=n(1936),u=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,s=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(r<3?i(s):r>3?i(t,n,s):i(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},d=function(){function e(){}return e=u([Object(o.I)({declarations:[l.a],imports:[s.a,a.a,c.a,i.l.forChild(l.a),r.b.forChild()]})],e)}()},1936:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var o=n(0),i=n(4),r=n(9),s=n(2),a=n(8),c=n(395),l=n(134),u=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,s=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(r<3?i(s):r>3?i(t,n,s):i(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},d=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(e,t,n,o,i,r,s,a){var c=this;this.appProvider=o,this.sitesProvider=i,this.viewCtrl=r,this.domUtils=s,this.chatProvider=a,this.users=[],this.usersLoaded=!1,this.sessionId=e.get("sessionId"),this.isOnline=this.appProvider.isOnline(),this.currentUserId=this.sitesProvider.getCurrentSiteUserId(),this.onlineObserver=t.onchange().subscribe(function(e){n.run(function(){c.isOnline=c.appProvider.isOnline()})})}return e.prototype.ionViewDidLoad=function(){var e=this;this.chatProvider.getChatUsers(this.sessionId).then(function(t){e.users=t.users}).catch(function(t){e.domUtils.showErrorModalDefault(t,"addon.mod_chat.errorwhilegettingchatusers",!0)}).finally(function(){e.usersLoaded=!0})},e.prototype.closeModal=function(){this.viewCtrl.dismiss()},e.prototype.talkTo=function(e){this.viewCtrl.dismiss({talkTo:e.fullname})},e.prototype.beepTo=function(e){this.viewCtrl.dismiss({beepTo:e.id})},e.prototype.ngOnDestroy=function(){this.onlineObserver&&this.onlineObserver.unsubscribe()},e=u([Object(o.m)({selector:"page-addon-mod-chat-users",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'addon.mod_chat.currentusers\' | translate }}</ion-title>\n        <ion-buttons end>\n            <button ion-button icon-only (click)="closeModal()" [attr.aria-label]="\'core.close\' | translate">\n                <ion-icon name="close"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]="usersLoaded">\n        <ion-item text-wrap *ngFor="let user of users" [class.addon-mod-chat-user]="currentUserId != user.id && isOnline">\n            <ion-avatar item-start>\n                <img [src]="user.profileimageurl" onError="this.src=\'assets/img/user-avatar.png\'" core-external-content [alt]="\'core.pictureof\' | translate:{$a: user.fullname}" role="presentation">\n            </ion-avatar>\n            <h2><core-format-text [text]="user.fullname"></core-format-text></h2>\n            <ng-container *ngIf="currentUserId != user.id && isOnline">\n                <button ion-button clear icon-left (click)="talkTo(user)">\n                    <ion-icon name="chatboxes"></ion-icon>\n                    {{ \'addon.mod_chat.talk\' | translate }}\n                </button>\n                <button ion-button clear icon-left (click)="beepTo(user)">\n                    <ion-icon name="notifications"></ion-icon>\n                    {{ \'addon.mod_chat.beep\' | translate }}\n                </button>\n            </ng-container>\n        </ion-item>\n    </core-loading>\n</ion-content>\n'}),d("design:paramtypes",[i.r,l.a,o.M,r.a,s.a,i.B,a.a,c.a])],e)}()}});