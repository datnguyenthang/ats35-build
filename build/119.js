webpackJsonp([119],{1787:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonBadgesIssuedBadgePageModule",function(){return g});var i=n(0),r=n(4),a=n(1),o=n(16),d=n(15),s=n(66),c=n(1911),u=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},g=function(){function e(){}return e=u([Object(i.I)({declarations:[c.a],imports:[o.a,d.a,s.a,r.l.forChild(c.a),a.b.forChild()]})],e)}()},1911:function(e,t,n){"use strict";n.d(t,"a",function(){return h});var i=n(0),r=n(4),a=n(194),o=n(22),d=n(8),s=n(2),c=n(26),u=n(41),g=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},h=function(){function e(e,t,n,i,r,a,o){this.badgesProvider=e,this.domUtils=i,this.timeUtils=r,this.userProvider=a,this.coursesProvider=o,this.user={},this.course={},this.badge={},this.badgeLoaded=!1,this.currentTime=0,this.courseId=t.get("courseId")||0,this.userId=t.get("userId")||n.getCurrentSite().getUserId(),this.badgeHash=t.get("badgeHash")}return e.prototype.ionViewDidLoad=function(){var e=this;this.fetchIssuedBadge().finally(function(){e.badgeLoaded=!0})},e.prototype.fetchIssuedBadge=function(){var e=this,t=[];this.currentTime=this.timeUtils.timestamp();var n=this.userProvider.getProfile(this.userId,this.courseId,!0).then(function(t){e.user=t});return t.push(n),n=this.badgesProvider.getUserBadges(this.courseId,this.userId).then(function(t){t.forEach(function(t){if(e.badgeHash==t.uniquehash&&(e.badge=t,t.courseid))return e.coursesProvider.getUserCourse(t.courseid,!0).then(function(t){e.course=t}).catch(function(){e.course=null})})}).catch(function(t){e.domUtils.showErrorModalDefault(t,"Error getting badge data.")}),t.push(n),Promise.all(t)},e.prototype.refreshBadges=function(e){var t=this;this.badgesProvider.invalidateUserBadges(this.courseId,this.userId).finally(function(){t.fetchIssuedBadge().finally(function(){e.complete()})})},g([Object(i._9)(r.f),l("design:type",r.f)],e.prototype,"content",void 0),e=g([Object(i.m)({selector:"page-addon-badges-issued-badge",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{badge.name}}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="badgeLoaded" (ionRefresh)="refreshBadges($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n    <core-loading [hideUntil]="badgeLoaded">\n\n        <ion-item-group>\n            <ion-item text-wrap class="item-avatar-center">\n                <img *ngIf="badge.badgeurl" class="avatar" [src]="badge.badgeurl" core-external-content [alt]="badge.name">\n                <ion-badge color="danger" *ngIf="badge.dateexpire && currentTime >= badge.dateexpire">\n                    {{ \'addon.badges.expired\' | translate }}\n                </ion-badge>\n            </ion-item>\n        </ion-item-group>\n\n        <ion-item-group *ngIf="user.fullname">\n            <ion-item-divider color="light">\n                <h2>{{ \'addon.badges.recipientdetails\' | translate}}</h2>\n            </ion-item-divider>\n            <ion-item text-wrap>\n                <h2>{{ \'core.name\' | translate}}</h2>\n                <p>\n                    <core-format-text clean="true" [text]="user.fullname"></core-format-text>\n                </p>\n            </ion-item>\n        </ion-item-group>\n\n        <ion-item-group>\n            <ion-item-divider color="light">\n                <h2>{{ \'addon.badges.issuerdetails\' | translate}}</h2>\n            </ion-item-divider>\n            <ion-item text-wrap *ngIf="badge.issuername">\n                <h2>{{ \'addon.badges.issuername\' | translate}}</h2>\n                <p>\n                    <core-format-text clean="true" [text]="badge.issuername"></core-format-text>\n                </p>\n            </ion-item>\n            <ion-item text-wrap *ngIf="badge.issuercontact">\n                <h2>{{ \'addon.badges.contact\' | translate}}</h2>\n                <p>\n                    <core-format-text clean="true" [text]="badge.issuercontact"></core-format-text>\n                </p>\n            </ion-item>\n        </ion-item-group>\n\n        <ion-item-group>\n            <ion-item-divider color="light">\n                <h2>{{ \'addon.badges.badgedetails\' | translate}}</h2>\n            </ion-item-divider>\n            <ion-item text-wrap *ngIf="badge.name">\n                <h2>{{ \'core.name\' | translate}}</h2>\n                <p>{{badge.name}}</p>\n            </ion-item>\n            <ion-item text-wrap *ngIf="badge.description">\n                <h2>{{ \'core.description\' | translate}}</h2>\n                <p>\n                    <core-format-text clean="true" [text]="badge.description"></core-format-text>\n                </p>\n            </ion-item>\n            <ion-item text-wrap *ngIf="course.fullname">\n                <h2>{{ \'core.course\' | translate}}</h2>\n                <p>\n                    <core-format-text clean="true" [text]="course.fullname"></core-format-text>\n                </p>\n            </ion-item>\n        </ion-item-group>\n\n        <ion-item-group>\n            <ion-item-divider color="light">\n                <h2>{{ \'addon.badges.issuancedetails\' | translate}}</h2>\n            </ion-item-divider>\n            <ion-item text-wrap *ngIf="badge.dateissued">\n                <h2>{{ \'addon.badges.dateawarded\' | translate}}</h2>\n                <p>{{badge.dateissued | coreToLocaleString }}</p>\n            </ion-item>\n            <ion-item text-wrap *ngIf="badge.dateexpire">\n                <h2>{{ \'addon.badges.expirydate\' | translate}}</h2>\n                <p>{{badge.dateexpire | coreToLocaleString }}</p>\n            </ion-item>\n        </ion-item-group>\n    </core-loading>\n</ion-content>\n'}),l("design:paramtypes",[a.a,r.r,s.a,d.a,o.a,c.a,u.a])],e)}()}});