webpackJsonp([75],{1832:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"AddonModLessonMenuModalPageModule",function(){return d});var o=t(0),a=t(4),i=t(16),c=t(15),r=t(1956),s=t(1),l=this&&this.__decorate||function(e,n,t,o){var a,i=arguments.length,c=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,o);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(c=(i<3?a(c):i>3?a(n,t,c):a(n,t))||c);return i>3&&c&&Object.defineProperty(n,t,c),c},d=function(){function e(){}return e=l([Object(o.I)({declarations:[r.a],imports:[i.a,c.a,a.l.forChild(r.a),s.b.forChild()]})],e)}()},1956:function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t(0),a=t(4),i=this&&this.__decorate||function(e,n,t,o){var a,i=arguments.length,c=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,o);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(c=(i<3?a(c):i>3?a(n,t,c):a(n,t))||c);return i>3&&c&&Object.defineProperty(n,t,c),c},c=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},r=function(){function e(e,n){this.viewCtrl=n,this.pageInstance=e.get("page")}return e.prototype.closeModal=function(){this.viewCtrl.dismiss()},e.prototype.loadPage=function(e){this.pageInstance.changePage&&this.pageInstance.changePage(e),this.closeModal()},e=i([Object(o.m)({selector:"page-addon-mod-lesson-menu-modal",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ pageInstance.lesson.name }}</ion-title>\n        <ion-buttons end>\n            <button ion-button icon-only (click)="closeModal()" [attr.aria-label]="\'core.close\' | translate">\n                <ion-icon name="close"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content class="addon-mod_lesson-menu-modal">\n    <nav>\n        <ion-list>\n            \x3c!-- Media file. --\x3e\n            <ng-container *ngIf="pageInstance.mediaFile">\n                <ion-item-divider color="light"><h2>{{ \'addon.mod_lesson.linkedmedia\' | translate }}</h2></ion-item-divider>\n                <core-file [file]="pageInstance.mediaFile" [component]="pageInstance.component" [componentId]="pageInstance.lesson.coursemodule"></core-file>\n            </ng-container>\n\n            \x3c!-- Lesson menu. --\x3e\n            <ng-container *ngIf="pageInstance.displayMenu">\n                <ion-item-divider color="light"><h2>{{ \'addon.mod_lesson.lessonmenu\' | translate }}</h2></ion-item-divider>\n                <ion-item text-center *ngIf="pageInstance.loadingMenu">\n                    <ion-spinner></ion-spinner>\n                </ion-item>\n                <div *ngIf="!pageInstance.loadingMenu">\n                    <ng-container *ngFor="let page of pageInstance.lessonPages">\n                        <a ion-item text-wrap *ngIf="page.display && page.displayinmenublock" (click)="loadPage(page.id)" [ngClass]=\'{"addon-mod_lesson-selected core-white-push-arrow": !pageInstance.eolData && pageInstance.currentPage == page.id}\'>\n                            <p><core-format-text [text]="page.title"></core-format-text></p>\n                        </a>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </ion-list>\n    </nav>\n</ion-content>\n'}),c("design:paramtypes",[a.r,a.B])],e)}()}});