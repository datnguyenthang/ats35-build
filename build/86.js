webpackJsonp([86],{1821:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o.d(t,"AddonModFeedbackNonRespondentsPageModule",function(){return u});var n=o(0),r=o(4),a=o(1),i=o(15),s=o(16),d=o(932),l=o(1945),c=this&&this.__decorate||function(e,t,o,n){var r,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(a<3?r(i):a>3?r(t,o,i):r(t,o))||i);return a>3&&i&&Object.defineProperty(t,o,i),i},u=function(){function e(){}return e=c([Object(n.I)({declarations:[l.a],imports:[i.a,s.a,d.a,r.l.forChild(l.a),a.b.forChild()]})],e)}()},1945:function(e,t,o){"use strict";o.d(t,"a",function(){return u});var n=o(0),r=o(4),a=o(86),i=o(248),s=o(46),d=o(8),l=this&&this.__decorate||function(e,t,o,n){var r,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(a<3?r(i):a>3?r(t,o,i):r(t,o))||i);return a>3&&i&&Object.defineProperty(t,o,i),i},c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=function(){function e(e,t,o,n,r,a){this.feedbackProvider=t,this.groupsProvider=o,this.domUtils=n,this.feedbackHelper=r,this.navCtrl=a,this.page=0,this.groupInfo={groups:[],separateGroups:!1,visibleGroups:!1},this.users=[],this.total=0,this.canLoadMore=!1,this.feedbackLoaded=!1,this.loadingMore=!1;var i=e.get("module");this.moduleId=i.id,this.feedbackId=i.instance,this.courseId=e.get("courseId"),this.selectedGroup=e.get("group")||0}return e.prototype.ionViewDidLoad=function(){this.fetchData()},e.prototype.fetchData=function(e){var t=this;return void 0===e&&(e=!1),this.page=0,this.total=0,this.users=[],this.groupsProvider.getActivityGroupInfo(this.moduleId).then(function(e){return t.groupInfo=e,t.loadGroupUsers(t.selectedGroup)}).catch(function(o){return t.domUtils.showErrorModalDefault(o,"core.course.errorgetmodule",!0),e||t.navCtrl.pop(),Promise.reject(null)})},e.prototype.loadGroupUsers=function(e){var t=this;return void 0===e?(this.page++,this.loadingMore=!0):(this.selectedGroup=e,this.page=0,this.total=0,this.users=[],this.feedbackLoaded=!1),this.feedbackHelper.getNonRespondents(this.feedbackId,this.selectedGroup,this.page).then(function(e){return t.total=e.total,t.users.length<e.total&&(t.users=t.users.concat(e.users)),t.canLoadMore=t.users.length<e.total,e}).finally(function(){t.loadingMore=!1,t.feedbackLoaded=!0})},e.prototype.loadAttempts=function(e){var t=this;this.loadGroupUsers(e).catch(function(e){t.domUtils.showErrorModalDefault(e,"core.course.errorgetmodule",!0)})},e.prototype.refreshFeedback=function(e){var t=this;if(this.feedbackLoaded){var o=[];o.push(this.feedbackProvider.invalidateNonRespondentsData(this.feedbackId)),o.push(this.groupsProvider.invalidateActivityGroupInfo(this.moduleId)),Promise.all(o).finally(function(){return t.fetchData(!0)}).finally(function(){e.complete()})}},e=l([Object(n.m)({selector:"page-addon-mod-feedback-nonrespondents",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'addon.mod_feedback.responses\' |translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="feedbackLoaded" (ionRefresh)="refreshFeedback($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n    <core-loading [hideUntil]="feedbackLoaded">\n        <ion-list no-margin>\n            <ion-item text-wrap *ngIf="groupInfo.separateGroups || groupInfo.visibleGroups">\n                <ion-label id="addon-feedback-groupslabel" *ngIf="groupInfo.separateGroups">{{ \'core.groupsseparate\' | translate }}</ion-label>\n                <ion-label id="addon-feedback-groupslabel" *ngIf="groupInfo.visibleGroups">{{ \'core.groupsvisible\' | translate }}</ion-label>\n                <ion-select [(ngModel)]="selectedGroup" (ionChange)="loadAttempts(selectedGroup)" aria-labelledby="addon-feedback-groupslabel" interface="popover">\n                    <ion-option *ngFor="let groupOpt of groupInfo.groups" [value]="groupOpt.id">{{groupOpt.name}}</ion-option>\n                </ion-select>\n            </ion-item>\n            <ion-item-divider color="light">\n                {{ \'addon.mod_feedback.non_respondents_students\' | translate : {$a: total } }}\n            </ion-item-divider>\n            <ng-container *ngIf="total > 0">\n                <ion-item *ngFor="let user of users" text-wrap>\n                    <ion-avatar item-start>\n                        <img [src]="user.profileimageurl" [alt]="\'core.pictureof\' | translate:{$a: user.fullname}" core-external-content onError="this.src=\'assets/img/user-avatar.png\'">\n                    </ion-avatar>\n                    <h2><core-format-text [text]="user.fullname"></core-format-text></h2>\n                    <p>\n                        <ion-badge color="success" *ngIf="user.started">\n                            {{ \'addon.mod_feedback.started\' | translate}}\n                        </ion-badge>\n                        <ion-badge color="danger" *ngIf="!user.started">\n                            {{ \'addon.mod_feedback.not_started\' | translate}}\n                        </ion-badge>\n                    </p>\n                </ion-item>\n            </ng-container>\n            <ion-item padding text-center *ngIf="canLoadMore">\n                \x3c!-- Button and spinner to show more attempts. --\x3e\n                <button ion-button block *ngIf="!loadingMore" (click)="loadAttempts()">{{ \'core.loadmore\' | translate }}</button>\n                <ion-spinner *ngIf="loadingMore"></ion-spinner>\n            </ion-item>\n        </ion-list>\n    </core-loading>\n</ion-content>\n'}),c("design:paramtypes",[r.r,a.a,s.a,d.a,i.a,r.q])],e)}()}});