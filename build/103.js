webpackJsonp([103],{1804:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n.d(e,"AddonModAssignEditFeedbackModalPageModule",function(){return l});var o=n(0),i=n(4),a=n(1928),s=n(1),r=n(16),c=n(15),d=n(933),u=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},l=function(){function t(){}return t=u([Object(o.I)({declarations:[a.a],imports:[r.a,c.a,d.a,i.l.forChild(a.a),s.b.forChild()]})],t)}()},1928:function(t,e,n){"use strict";n.d(e,"a",function(){return u});var o=n(0),i=n(4),a=n(1),s=n(8),r=n(110),c=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},d=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=function(){function t(t,e,n,o,i){this.viewCtrl=e,this.domUtils=n,this.translate=o,this.feedbackDelegate=i,this.forceLeave=!1,this.assign=t.get("assign"),this.submission=t.get("submission"),this.plugin=t.get("plugin"),this.userId=t.get("userId")}return t.prototype.ionViewCanLeave=function(){var t=this;return!!this.forceLeave||this.hasDataChanged().then(function(e){if(e)return t.domUtils.showConfirm(t.translate.instant("core.confirmcanceledit"))})},t.prototype.closeModal=function(t){this.viewCtrl.dismiss(t)},t.prototype.done=function(){this.forceLeave=!0,this.closeModal(this.getInputData())},t.prototype.getInputData=function(){return this.domUtils.getDataFromForm(document.forms["addon-mod_assign-edit-feedback-form"])},t.prototype.hasDataChanged=function(){return this.feedbackDelegate.hasPluginDataChanged(this.assign,this.userId,this.plugin,this.getInputData(),this.userId).catch(function(){return!0})},c([Object(o.D)(),d("design:type",Object)],t.prototype,"assign",void 0),c([Object(o.D)(),d("design:type",Object)],t.prototype,"submission",void 0),c([Object(o.D)(),d("design:type",Object)],t.prototype,"plugin",void 0),c([Object(o.D)(),d("design:type",Number)],t.prototype,"userId",void 0),t=c([Object(o.m)({selector:"page-addon-mod-assign-edit-feedback-modal",template:'<ion-header>\n    <ion-navbar>\n        <ion-title><core-format-text [text]="plugin.name"></core-format-text></ion-title>\n        <ion-buttons end>\n            <button ion-button icon-only (click)="closeModal()" [attr.aria-label]="\'core.close\' | translate">\n                <ion-icon name="close"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <form name="addon-mod_assign-edit-feedback-form" *ngIf="userId && plugin">\n        <addon-mod-assign-feedback-plugin [assign]="assign" [submission]="submission" [userId]="userId" [plugin]="plugin" [edit]="true"></addon-mod-assign-feedback-plugin>\n        <button ion-button block (click)="done()">{{ \'core.done\' | translate }}</button>\n    </form>\n</ion-content>\n'}),d("design:paramtypes",[i.r,i.B,s.a,a.c,r.a])],t)}()}});