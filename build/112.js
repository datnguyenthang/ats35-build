webpackJsonp([112],{1793:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"AddonCompetencyCompetencySummaryPageModule",function(){return s});var o=n(0),c=n(4),r=n(1),i=n(16),a=n(15),p=n(1917),m=this&&this.__decorate||function(e,t,n,o){var c,r=arguments.length,i=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(c=e[a])&&(i=(r<3?c(i):r>3?c(t,n,i):c(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i},s=function(){function e(){}return e=m([Object(o.I)({declarations:[p.a],imports:[i.a,a.a,c.l.forChild(p.a),r.b.forChild()]})],e)}()},1917:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var o=n(0),c=n(4),r=n(8),i=n(133),a=n(162),p=this&&this.__decorate||function(e,t,n,o){var c,r=arguments.length,i=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(c=e[a])&&(i=(r<3?c(i):r>3?c(t,n,i):c(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i},m=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(n,o){t(n,o,e)}},f=function(){function e(e,t,n,o,c){this.navCtrl=e,this.domUtils=n,this.svComponent=o,this.competencyProvider=c,this.competencyLoaded=!1,this.competencyId=t.get("competencyId")}return e.prototype.ionViewDidLoad=function(){var e=this;this.fetchCompetency().then(function(){e.competencyProvider.logCompetencyView(e.competencyId)}).finally(function(){e.competencyLoaded=!0})},e.prototype.fetchCompetency=function(){var e=this;return this.competencyProvider.getCompetencySummary(this.competencyId).then(function(t){e.competency=t}).catch(function(t){e.domUtils.showErrorModalDefault(t,"Error getting competency summary data.")})},e.prototype.refreshCompetency=function(e){var t=this;this.competencyProvider.invalidateCompetencySummary(this.competencyId).finally(function(){t.fetchCompetency().finally(function(){e.complete()})})},e.prototype.openCompetencySummary=function(e){(this.svComponent?this.svComponent.getMasterNav():this.navCtrl).push("AddonCompetencyCompetencySummaryPage",{competencyId:e})},e=p([Object(o.m)({selector:"page-addon-competency-competency-summary",template:'<ion-header>\n    <ion-navbar>\n        <ion-title *ngIf="competency">{{ competency.competency.shortname }} <small>{{ competency.competency.idnumber }}</small></ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher [enabled]="competencyLoaded" (ionRefresh)="refreshCompetency($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n    <core-loading [hideUntil]="competencyLoaded">\n        <ion-card *ngIf="competency">\n            <ion-item text-wrap *ngIf="competency.competency.description">\n                <core-format-text [text]="competency.competency.description"></core-format-text>\n            </ion-item>\n            <ion-item text-wrap>\n                <strong>{{ \'addon.competency.path\' | translate }}</strong>:\n                {{ competency.comppath.framework.name }}\n                <span *ngFor="let ancestor of competency.comppath.ancestors">\n                    &nbsp;/&nbsp;<a (click)="openCompetencySummary(ancestor.id)">{{ ancestor.name }}</a>\n                </span>\n            </ion-item>\n        </ion-card>\n    </core-loading>\n</ion-content>\n'}),s(3,Object(o.N)()),m("design:paramtypes",[c.q,c.r,r.a,i.a,a.a])],e)}()}});