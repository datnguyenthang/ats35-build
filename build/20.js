webpackJsonp([20],{1891:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"CoreSettingsGeneralPageModule",function(){return s});var o=n(0),r=n(4),a=n(1),i=n(2019),g=n(16),l=n(15),c=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var g=e.length-1;g>=0;g--)(r=e[g])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},s=function(){function e(){}return e=c([Object(o.I)({declarations:[i.a],imports:[g.a,l.a,r.l.forChild(i.a),a.b.forChild()]})],e)}()},2019:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var o=n(0),r=n(9),a=n(30),i=n(105),g=n(27),l=n(12),c=n(93),s=n(8),d=n(78),h=n(72),u=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var g=e.length-1;g>=0;g--)(r=e[g])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},p=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(e,t,n,o,r,i,g){var l=this;this.configProvider=t,this.eventsProvider=o,this.langProvider=r,this.domUtils=i,this.languages={},this.languageCodes=[],this.languages=h.a.languages,this.languageCodes=Object.keys(this.languages),r.getCurrentLanguage().then(function(e){l.selectedLanguage=e}),this.rteSupported=this.domUtils.isRichTextEditorSupported(),this.rteSupported&&this.configProvider.get(a.a.SETTINGS_RICH_TEXT_EDITOR,!0).then(function(e){l.richTextEditor=!!e}),localStorage&&localStorage.getItem&&localStorage.setItem?(this.showReport=!0,this.reportInBackground=1===parseInt(localStorage.getItem(a.a.SETTINGS_REPORT_IN_BACKGROUND),10)):this.showReport=!1}return e.prototype.languageChanged=function(){var e=this;this.langProvider.changeCurrentLanguage(this.selectedLanguage).finally(function(){e.eventsProvider.trigger(l.a.LANGUAGE_CHANGED)})},e.prototype.richTextEditorChanged=function(){this.configProvider.set(a.a.SETTINGS_RICH_TEXT_EDITOR,this.richTextEditor?1:0)},e.prototype.reportInBackgroundChanged=function(){localStorage.setItem(a.a.SETTINGS_REPORT_IN_BACKGROUND,this.reportInBackground?"1":"0")},e=u([Object(o.m)({selector:"page-core-settings-general",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'core.settings.general\' | translate }}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-item text-wrap>\n        <ion-label><h2>{{ \'core.settings.language\' | translate }}</h2></ion-label>\n        <ion-select [(ngModel)]="selectedLanguage" (ngModelChange)="languageChanged()" interface="popover">\n            <ion-option *ngFor="let code of languageCodes" [value]="code">{{ languages[code] }}</ion-option>\n        </ion-select>\n    </ion-item>\n    <ion-item text-wrap *ngIf="rteSupported">\n        <ion-label>\n            <h2>{{ \'core.settings.enablerichtexteditor\' | translate }}</h2>\n            <p>{{ \'core.settings.enablerichtexteditordescription\' | translate }}</p>\n        </ion-label>\n        <ion-toggle [(ngModel)]="richTextEditor" (ngModelChange)="richTextEditorChanged()"></ion-toggle>\n    </ion-item>\n    <ion-item text-wrap *ngIf="showReport">\n        <ion-label><h2>{{ \'core.settings.reportinbackground\' | translate }}</h2></ion-label>\n        <ion-toggle [(ngModel)]="reportInBackground" (ngModelChange)="reportInBackgroundChanged()"></ion-toggle>\n    </ion-item>\n</ion-content>\n'}),p("design:paramtypes",[r.a,i.a,g.a,l.a,c.a,s.a,d.a])],e)}()}});