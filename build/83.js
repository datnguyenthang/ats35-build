webpackJsonp([83],{1824:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"AddonModForumDiscussionPageModule",function(){return f});var o=e(0),s=e(4),i=e(1),r=e(16),c=e(15),d=e(940),a=e(1948),u=this&&this.__decorate||function(t,n,e,o){var s,i=arguments.length,r=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,n,e,o);else for(var c=t.length-1;c>=0;c--)(s=t[c])&&(r=(i<3?s(r):i>3?s(n,e,r):s(n,e))||r);return i>3&&r&&Object.defineProperty(n,e,r),r},f=function(){function t(){}return t=u([Object(o.I)({declarations:[a.a],imports:[r.a,c.a,d.a,s.l.forChild(a.a),i.b.forChild()]})],t)}()},1948:function(t,n,e){"use strict";e.d(n,"a",function(){return b});var o=e(0),s=e(4),i=e(134),r=e(1),c=e(9),d=e(12),a=e(2),u=e(8),f=e(6),l=e(56),h=e(133),m=e(117),p=e(149),g=e(195),I=e(196),v=this&&this.__decorate||function(t,n,e,o){var s,i=arguments.length,r=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,n,e,o);else for(var c=t.length-1;c>=0;c--)(s=t[c])&&(r=(i<3?s(r):i>3?s(n,e,r):s(n,e))||r);return i>3&&r&&Object.defineProperty(n,e,r),r},P=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},y=this&&this.__param||function(t,n){return function(e,o){n(e,o,t)}},b=function(){function t(t,n,e,o,s,i,r,c,d,a,u,f,l,h,p){var g=this;this.appProvider=o,this.eventsProvider=s,this.sitesProvider=i,this.domUtils=r,this.utils=c,this.translate=d,this.uploaderProvider=a,this.forumProvider=u,this.forumOffline=f,this.forumHelper=l,this.forumSync=h,this.svComponent=p,this.discussionLoaded=!1,this.sort="flat-oldest",this.replyData={replyingTo:0,isEditing:!1,subject:"",message:null,files:[]},this.originalData={subject:null,message:null,files:[]},this.refreshIcon="spinner",this.syncIcon="spinner",this.discussionStr="",this.component=m.a.COMPONENT,this.courseId=t.get("courseId"),this.cmId=t.get("cmId"),this.forumId=t.get("forumId"),this.discussionId=t.get("discussionId"),this.trackPosts=t.get("trackPosts"),this.locked=t.get("locked"),this.isOnline=this.appProvider.isOnline(),this.onlineObserver=n.onchange().subscribe(function(t){e.run(function(){g.isOnline=g.appProvider.isOnline()})}),this.isSplitViewOn=this.svComponent&&this.svComponent.isOn(),this.discussionStr=d.instant("addon.mod_forum.discussion")}return t.prototype.ionViewDidLoad=function(){this.fetchPosts(!0,!1,!0)},t.prototype.ionViewDidEnter=function(){var t=this;this.syncObserver=this.eventsProvider.on(I.a.AUTO_SYNCED,function(n){n.forumId==t.forumId&&t.discussionId==n.discussionId&&n.userId==t.sitesProvider.getCurrentSiteUserId()&&(t.discussionLoaded=!1,t.refreshPosts())},this.sitesProvider.getCurrentSiteId()),this.syncManualObserver=this.eventsProvider.on(I.a.MANUAL_SYNCED,function(n){"discussion"!=n.source&&n.forumId==t.forumId&&n.userId==t.sitesProvider.getCurrentSiteUserId()&&(t.discussionLoaded=!1,t.refreshPosts())},this.sitesProvider.getCurrentSiteId()),this.eventsProvider.trigger(m.a.VIEW_DISCUSSION_EVENT,{forumId:this.forumId,discussion:this.discussionId},this.sitesProvider.getCurrentSiteId())},t.prototype.ionViewCanLeave=function(){var t=this;return(this.forumHelper.hasPostDataChanged(this.replyData,this.originalData)?this.domUtils.showConfirm(this.translate.instant("core.confirmcanceledit")):Promise.resolve()).then(function(){t.uploaderProvider.clearTmpFiles(t.replyData.files)})},t.prototype.fetchForum=function(){return this.courseId&&this.cmId?this.forumProvider.getForum(this.courseId,this.cmId):this.courseId&&this.forumId?this.forumProvider.getForumById(this.courseId,this.forumId):Promise.reject(null)},t.prototype.fetchPosts=function(t,n,e){var o=this,s=[],i=[],r=!1;return(t?this.syncDiscussion(n).catch(function(){}):Promise.resolve()).then(function(){return o.forumProvider.getDiscussionPosts(o.discussionId).then(function(t){s=t}).then(function(){return o.forumOffline.getDiscussionReplies(o.discussionId).then(function(t){o.postHasOffline=!!t.length;var n=[],e={};return s.forEach(function(t){e[t.id]=t,r=r||!t.postread}),t.forEach(function(t){o.forumId||(o.forumId=t.forumid),o.courseId||(o.courseId=t.courseid),n.push(o.forumHelper.convertOfflineReplyToOnline(t).then(function(t){i.push(t),e[t.parent].canreply=!1}))}),Promise.all(n).then(function(){s=o.utils.objectToArray(e)})})})}).then(function(){var t=i.concat(s);if(o.discussion=o.forumProvider.extractStartingPost(t),"nested"==o.sort)o.forumProvider.sortDiscussionPosts(t,"ASC"),o.posts=o.utils.formatTree(t,"parent","id",o.discussion.id);else{o.forumProvider.sortDiscussionPosts(t,"flat-newest"==o.sort?"DESC":"ASC"),o.posts=t}return o.defaultSubject=o.translate.instant("addon.mod_forum.re")+" "+o.discussion.subject,o.replyData.subject=o.defaultSubject,o.fetchForum().then(function(t){o.discussion.userfullname&&0==o.discussion.parent&&"single"==t.type&&(o.discussion.userfullname=null),void 0!==t.istracked&&(o.trackPosts=t.istracked),o.forumId=t.id,o.cmId=t.cmid,o.forum=t}).catch(function(){o.forum={}})}).catch(function(t){o.domUtils.showErrorModal(t)}).finally(function(){o.discussionLoaded=!0,o.refreshIcon="refresh",o.syncIcon="sync",(e||r&&o.trackPosts)&&o.forumProvider.logDiscussionView(o.discussionId).catch(function(){})})},t.prototype.syncDiscussion=function(t){var n=this;return this.forumSync.syncDiscussionReplies(this.discussionId).then(function(t){return t.warnings&&t.warnings.length&&n.domUtils.showErrorModal(t.warnings[0]),t&&t.updated&&n.eventsProvider.trigger(I.a.MANUAL_SYNCED,{forumId:n.forumId,userId:n.sitesProvider.getCurrentSiteUserId(),source:"discussion"},n.sitesProvider.getCurrentSiteId()),t.updated}).catch(function(e){return t&&n.domUtils.showErrorModalDefault(e,"core.errorsync",!0),Promise.reject(null)})},t.prototype.doRefresh=function(t,n,e){return void 0===e&&(e=!1),this.discussionLoaded?this.refreshPosts(!0,e).finally(function(){t&&t.complete(),n&&n()}):Promise.resolve()},t.prototype.refreshPosts=function(t,n){var e=this;return this.content&&this.content.scrollToTop(),this.refreshIcon="spinner",this.syncIcon="spinner",this.forumProvider.invalidateDiscussionPosts(this.discussionId).catch(function(){}).then(function(){return e.fetchPosts(t,n)})},t.prototype.changeSort=function(t){return this.discussionLoaded=!1,this.sort=t,this.content&&this.content.scrollToTop(),this.fetchPosts()},t.prototype.postListChanged=function(){var t=this;this.eventsProvider.trigger(m.a.REPLY_DISCUSSION_EVENT,{forumId:this.forumId,discussionId:this.discussionId,cmId:this.cmId},this.sitesProvider.getCurrentSiteId()),this.discussionLoaded=!1,this.refreshPosts().finally(function(){t.discussionLoaded=!0})},t.prototype.ionViewWillLeave=function(){this.syncObserver&&this.syncObserver.off(),this.syncManualObserver&&this.syncManualObserver.off()},t.prototype.ngOnDestroy=function(){this.onlineObserver&&this.onlineObserver.unsubscribe()},v([Object(o._9)(s.f),P("design:type",s.f)],t.prototype,"content",void 0),t=v([Object(o.m)({selector:"page-addon-mod-forum-discussion",template:'<ion-header>\n    <ion-navbar>\n        <ion-title *ngIf="discussion"><core-format-text [text]="discussion.subject"></core-format-text></ion-title>\n        <ion-buttons end>\n            \x3c!-- The context menu will be added in here. --\x3e\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<core-navbar-buttons end>\n    <core-context-menu>\n        <core-context-menu-item [priority]="650" *ngIf="discussionLoaded && !postHasOffline && isOnline" [content]="\'addon.mod_forum.refreshposts\' | translate" (action)="doRefresh(null, $event)" [iconAction]="refreshIcon" [closeOnClick]="false"></core-context-menu-item>\n        <core-context-menu-item [priority]="550" *ngIf="discussionLoaded && !isSplitViewOn && postHasOffline && isOnline" [content]="\'core.settings.synchronizenow\' | translate" (action)="doRefresh(null, $event, true)" [iconAction]="syncIcon" [closeOnClick]="false"></core-context-menu-item>\n        <core-context-menu-item [hidden]="sort == \'flat-oldest\'" [priority]="500" [content]="\'addon.mod_forum.modeflatoldestfirst\' | translate" (action)="changeSort(\'flat-oldest\')" iconAction="arrow-round-down"></core-context-menu-item>\n        <core-context-menu-item [hidden]="sort == \'flat-newest\'" [priority]="450" [content]="\'addon.mod_forum.modeflatnewestfirst\' | translate" (action)="changeSort(\'flat-newest\')" iconAction="arrow-round-up"></core-context-menu-item>\n        <core-context-menu-item [hidden]="sort == \'nested\'" [priority]="400" [content]="\'addon.mod_forum.modenested\' | translate" (action)="changeSort(\'nested\')" iconAction="swap"></core-context-menu-item>\n    </core-context-menu>\n</core-navbar-buttons>\n<ion-content>\n    <ion-refresher [enabled]="discussionLoaded" (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n    </ion-refresher>\n\n    <core-loading [hideUntil]="discussionLoaded">\n        \x3c!-- Discussion replies found to be synchronized --\x3e\n        <ion-card class="core-warning-card" *ngIf="postHasOffline">\n            <ion-icon name="warning"></ion-icon> {{ \'core.hasdatatosync\' | translate:{$a: discussionStr} }}\n        </ion-card>\n\n        <ion-card class="core-warning-card" *ngIf="locked">\n            <ion-icon name="warning"></ion-icon> {{ \'addon.mod_forum.discussionlocked\' | translate }}\n        </ion-card>\n\n        <ion-card *ngIf="discussion" margin-bottom>\n            <addon-mod-forum-post [post]="discussion" [courseId]="courseId" [discussionId]="discussionId" [component]="component" [componentId]="cmId" [replyData]="replyData" [originalData]="originalData" [defaultSubject]="defaultSubject" [forum]="forum" [trackPosts]="trackPosts" (onPostChange)="postListChanged()"></addon-mod-forum-post>\n        </ion-card>\n\n        <ion-card *ngIf="sort != \'nested\'">\n            <ng-container *ngFor="let post of posts; first as first">\n                <ion-item-divider color="light" *ngIf="!first"></ion-item-divider>\n                <addon-mod-forum-post [post]="post" [courseId]="courseId" [discussionId]="discussionId" [component]="component" [componentId]="cmId" [replyData]="replyData" [originalData]="originalData" [defaultSubject]="defaultSubject" [forum]="forum" [trackPosts]="trackPosts" (onPostChange)="postListChanged()"></addon-mod-forum-post>\n            </ng-container>\n        </ion-card>\n\n        <ng-container *ngIf="sort == \'nested\'">\n            <ng-container *ngFor="let post of posts">\n                <ng-container *ngTemplateOutlet="nestedPosts; context: {post: post}"></ng-container>\n            </ng-container>\n        </ng-container>\n\n        <ng-template #nestedPosts let-post="post">\n            <ion-card>\n                <addon-mod-forum-post [post]="post" [courseId]="courseId" [discussionId]="discussionId" [component]="component" [componentId]="cmId" [replyData]="replyData" [originalData]="originalData" [defaultSubject]="defaultSubject" [forum]="forum" [trackPosts]="trackPosts" (onPostChange)="postListChanged()"></addon-mod-forum-post>\n            </ion-card>\n            <div padding-left *ngIf="post.children.length && post.children[0].subject">\n                <ng-container *ngFor="let child of post.children">\n                    <ng-container *ngTemplateOutlet="nestedPosts; context: {post: child}"></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    </core-loading>\n</ion-content>\n'}),y(14,Object(o.N)()),P("design:paramtypes",[s.r,i.a,o.M,c.a,d.a,a.a,u.a,f.a,r.c,l.a,m.a,p.a,g.a,I.a,h.a])],t)}()}});